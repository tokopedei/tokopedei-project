{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Ecommerce-Project\\\\front-end\\\\src\\\\components\\\\main\\\\Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport KeyContent from './keyContent/KeyContent';\nimport Payment from './payment/Payment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const refetchCart = useSelector(state => state.getRefetchCart);\n\n  const axios = require('axios');\n\n  useEffect(() => {\n    // Fetch cart\n    (async () => {\n      try {\n        const res = await axios.post('http://localhost:3001/cart', {\n          token: localStorage.getItem('token')\n        });\n\n        if (res.data.status === '409') {\n          const totalPrice = () => {\n            let total = 0;\n\n            if (res.data.isCart.products.length > 0) {\n              res.data.isCart.products.forEach(e => {\n                total += Number(e.productCart.price);\n              });\n              return total.toFixed(2);\n            } else {\n              return total.toFixed(2);\n            }\n          };\n\n          dispatch({\n            type: 'SET_TOTAL_PRICE',\n            totalPrice: totalPrice()\n          });\n          dispatch({\n            type: 'SET_OPEN_CART',\n            openCart: res.data.isCart.id\n          });\n          dispatch({\n            type: 'SET_PRODUCT_CART',\n            productCart: res.data.isCart.products\n          });\n        } else {\n          dispatch({\n            type: 'SET_TOTAL_PRICE',\n            totalPrice: '0.00'\n          });\n          dispatch({\n            type: 'SET_OPEN_CART',\n            openCart: res.data.cartId\n          });\n          dispatch({\n            type: 'SET_PRODUCT_CART',\n            productCart: []\n          });\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    })();\n  }, [dispatch, refetchCart, axios]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          component: Payment,\n          path: \"/checkout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          component: KeyContent,\n          path: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Main, \"S5eDG+0p3YIFGq1Oa0/B5Omwyqg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/xampp/htdocs/Ecommerce-Project/front-end/src/components/main/Main.jsx"],"names":["React","useEffect","BrowserRouter","Router","Switch","Route","useDispatch","useSelector","KeyContent","Payment","Main","dispatch","refetchCart","state","getRefetchCart","axios","require","res","post","token","localStorage","getItem","data","status","totalPrice","total","isCart","products","length","forEach","e","Number","productCart","price","toFixed","type","openCart","id","cartId","err","console","error"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport KeyContent from './keyContent/KeyContent';\r\nimport Payment from './payment/Payment';\r\n\r\nconst Main = () => {\r\n    const dispatch = useDispatch();\r\n    const refetchCart = useSelector(state => state.getRefetchCart);\r\n    const axios = require('axios');\r\n\r\n    useEffect(() => { // Fetch cart\r\n        (async () => {\r\n            try {\r\n                const res = await axios.post('http://localhost:3001/cart', \r\n                {token: localStorage.getItem('token')});\r\n                \r\n                if (res.data.status === '409') {\r\n                    const totalPrice = () => {\r\n                        let total = 0;\r\n                          if (res.data.isCart.products.length > 0) {\r\n                            res.data.isCart.products.forEach(e => {\r\n                                total+= Number(e.productCart.price);\r\n                              });\r\n                              return total.toFixed(2);\r\n                          } else {\r\n                            return total.toFixed(2);\r\n                          }\r\n                     \r\n                    }\r\n    \r\n                    dispatch({type: 'SET_TOTAL_PRICE', totalPrice: totalPrice() });\r\n                    dispatch({type: 'SET_OPEN_CART', openCart: res.data.isCart.id});\r\n                    dispatch({type: 'SET_PRODUCT_CART', productCart: res.data.isCart.products});\r\n                } else {\r\n                    dispatch({type: 'SET_TOTAL_PRICE', totalPrice:  '0.00'});\r\n                    dispatch({type: 'SET_OPEN_CART', openCart: res.data.cartId});\r\n                    dispatch({type: 'SET_PRODUCT_CART', productCart: []});\r\n                }\r\n            \r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    })();\r\n    }, [dispatch, refetchCart, axios]);\r\n    \r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <Route component={Payment} path='/checkout' />\r\n                    <Route component={KeyContent} path='/' />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}