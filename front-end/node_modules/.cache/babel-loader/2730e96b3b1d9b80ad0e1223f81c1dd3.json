{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Ecommerce-Project\\\\front-end\\\\src\\\\components\\\\main\\\\payment\\\\details\\\\Details.jsx\",\n    _s = $RefreshSig$();\n\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './Details.css';\nimport './DetailsQueries.css';\nimport React, { useState, useEffect } from 'react';\nimport { IoHelpCircleOutline } from 'react-icons/io5';\nimport DatePicker from 'react-datepicker';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { jsPDF } from 'jspdf';\nimport 'jspdf-autotable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Details = () => {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [userDetails, setUserDetails] = useState();\n  const [streetInp, setStreetInp] = useState('');\n  const [cityInp, setCityInp] = useState('');\n  const [startDate, setStartDate] = useState(null);\n  const [cityErrMsg, setCityErrMsg] = useState();\n  const [streetErrMsg, setStreetErrMsg] = useState();\n  const [dateErrMsg, setDateErrMsg] = useState();\n  const [creditCardErrMsg, setCreditCardErrMsg] = useState();\n  const cartSummery = useSelector(state => state.getCartSummery);\n  const cartId = useSelector(state => state.getCartId);\n  const [modalSuccess, setModalSuccess] = useState(false);\n  const [orderId, setOrderId] = useState('');\n  const [datesFull, setDatesFull] = useState([]);\n  const [arrPdf, setArrPdf] = useState([]);\n  const [subTotal, setSubTotal] = useState(0);\n  const [shippingInfo, setShippingInfo] = useState('');\n  const doc = new jsPDF('p', 'pt', 'a4');\n\n  const axios = require('axios');\n\n  useEffect(() => {\n    // Fetch user shipping address\n    (async () => {\n      try {\n        const res = await axios.post('http://localhost:3001/address', {\n          token: localStorage.getItem('token')\n        });\n        res.data.status === '200' && setUserDetails(res.data.data);\n      } catch (err) {\n        console.error(err);\n      }\n    })();\n  }, [axios]);\n  useEffect(() => {\n    // Fetch busy dates\n    (async () => {\n      try {\n        const res = await axios.get('http://localhost:3001/dates');\n        setDatesFull(res.data.data);\n      } catch (err) {\n        console.error(err);\n      }\n    })();\n  }, [axios]);\n\n  const isValid = e => {\n    // Form validation\n    e.preventDefault();\n\n    if (e.target.city.value) {\n      // City name validation\n      if (e.target.street.value) {\n        // Street name Validation\n        if (startDate) {\n          if (/^(?:4[0-9]{12}(?:[0-9]{3})?|[25][1-7][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/.test(e.target.creditCard.value)) {\n            // Credit card valdation\n            sendOrder({\n              city: e.target.city.value,\n              street: e.target.street.value,\n              deliveryDate: new Date(startDate).toLocaleDateString(),\n              creditCardNumber: e.target.creditCard.value,\n              shoppingCartId: cartId,\n              token: localStorage.getItem('token')\n            });\n          }\n        }\n      }\n    }\n  };\n\n  const sendOrder = async obj => {\n    // Make an order function\n    try {\n      const res = await axios.post('http://localhost:3001/order', obj);\n\n      if (res.data.status === '200') {\n        setShippingInfo({\n          city: obj.city,\n          street: obj.street,\n          deliveryDate: obj.deliveryDate\n        });\n        setOrderId(res.data.data.orderId);\n        setModalSuccess(true);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const receiptHandler = () => {\n    // Create the receipt as PDF file\n    doc.text('Mazon Online', 45, 30);\n    doc.setFontSize(11);\n    doc.text(`Bill to: ${localStorage.getItem('fname')} ${localStorage.getItem('lname')}`, 45, 50);\n    doc.text(`Order number: ${orderId}`, 45, 70);\n    doc.text(`Shipping Address: ${shippingInfo.city}, ${shippingInfo.street}`, 45, 90);\n    doc.text(`Delivery Date: ${new Date(shippingInfo.deliveryDate).toLocaleDateString('en-GB')}`, 45, 110);\n    doc.text(`${new Date().toLocaleDateString('en-GB')}`, 470, 30);\n    doc.autoTable({\n      theme: 'plain',\n      startY: 120,\n      head: [['Description', 'Quantity', 'Total Amount']],\n      body: [...arrPdf],\n      foot: [[{\n        content: `Subtotal: $${subTotal}`,\n        colSpan: 2,\n        rowSpan: 2,\n        styles: {\n          halign: 'left'\n        }\n      }]]\n    });\n    doc.save('Mazon-Online-Receipt.pdf');\n  };\n\n  useEffect(() => {\n    // Set receipt details\n    if (Array.isArray(cartSummery)) {\n      const result = cartSummery.map(e => {\n        return [e.name, e.productCart.quantity, e.productCart.price];\n      });\n      setArrPdf(result);\n\n      const totalPrice = () => {\n        let total = 0;\n        cartSummery.forEach(e => {\n          total += Number(e.productCart.price);\n        });\n        return total.toFixed(2);\n      };\n\n      setSubTotal(totalPrice);\n    }\n  }, [cartSummery]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Billing Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"payment-form\",\n      onSubmit: isValid,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"city-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"city\",\n          children: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onDoubleClick: () => setCityInp(userDetails.city),\n          onChange: e => {\n            setCityInp(e.target.value);\n\n            if (e.target.value === '') {\n              setCityErrMsg('Please enter your city name');\n            } else {\n              setCityErrMsg('');\n            }\n          },\n          type: \"text\",\n          name: \"city\",\n          id: \"city\",\n          placeholder: \"Enter your city name\",\n          value: cityInp,\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"help-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(IoHelpCircleOutline, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Double click on the 'City' field to get the defualt value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), cityErrMsg ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"err-msg\",\n          children: cityErrMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 32\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"street-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"street\",\n          children: \"Street\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onDoubleClick: () => setStreetInp(userDetails.street),\n          onChange: e => {\n            setStreetInp(e.target.value);\n\n            if (e.target.value === '') {\n              setStreetErrMsg('Please enter your street address');\n            } else {\n              setStreetErrMsg('');\n            }\n          },\n          type: \"street\",\n          name: \"street\",\n          id: \"street\",\n          placeholder: \"Enter your street address\",\n          value: streetInp,\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"help-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(IoHelpCircleOutline, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Double click on the 'Street' field to get the defualt value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), streetErrMsg ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"err-msg\",\n          children: streetErrMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 38\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"deliveryDate\",\n          children: \"Delivery Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          excludeDates: datesFull.map(e => {\n            return new Date(e);\n          }),\n          dateFormat: \"dd/MM/yyyy\",\n          wrapperClassName: \"datePicker\",\n          selected: startDate,\n          onChange: date => {\n            setStartDate(date);\n\n            if (date === null) {\n              setDateErrMsg('Please pick a delivery date');\n            } else {\n              setDateErrMsg('');\n            }\n          },\n          minDate: new Date(),\n          placeholderText: \"Pick a delivery date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }, this), dateErrMsg ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"err-msg\",\n            children: dateErrMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 40\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"help-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(IoHelpCircleOutline, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Non-clickable dates are not available for delivery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"creditCard-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"creditCard\",\n          children: \"Credit Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"creditCard\",\n          id: \"creditCard\",\n          autoComplete: \"off\",\n          placeholder: \"Enter your credit card number\",\n          onChange: e => {\n            if (/^(?:4[0-9]{12}(?:[0-9]{3})?|[25][1-7][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/.test(e.target.value)) {\n              setCreditCardErrMsg('');\n            } else if (e.target.value === '') {\n              setCreditCardErrMsg('Please enter your credit card number');\n            } else {\n              setCreditCardErrMsg('Card number invalid');\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this), creditCardErrMsg ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"err-msg\",\n            children: creditCardErrMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 42\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"order-btn\",\n          children: \"Checkout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), modalSuccess ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-success-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-success-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-success\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-success-top\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Thank you!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Your order was placed successfuly.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Order number is: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: orderId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-success-bottom\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: receiptHandler,\n              className: \"download-btn\",\n              children: \"* Click here to download your receipt.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-back\",\n              onClick: () => {\n                dispatch({\n                  type: 'SET_REFETCH_CART',\n                  refetchCart: Math.random() * 2\n                });\n                history.push('/');\n              },\n              children: \"Back to shopping\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Details, \"7DHAEEcQpcGfM9mkiupkQU50g2g=\", false, function () {\n  return [useHistory, useDispatch, useSelector, useSelector];\n});\n\n_c = Details;\nexport default Details;\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["C:/xampp/htdocs/Ecommerce-Project/front-end/src/components/main/payment/details/Details.jsx"],"names":["React","useState","useEffect","IoHelpCircleOutline","DatePicker","useSelector","useDispatch","useHistory","jsPDF","Details","history","dispatch","userDetails","setUserDetails","streetInp","setStreetInp","cityInp","setCityInp","startDate","setStartDate","cityErrMsg","setCityErrMsg","streetErrMsg","setStreetErrMsg","dateErrMsg","setDateErrMsg","creditCardErrMsg","setCreditCardErrMsg","cartSummery","state","getCartSummery","cartId","getCartId","modalSuccess","setModalSuccess","orderId","setOrderId","datesFull","setDatesFull","arrPdf","setArrPdf","subTotal","setSubTotal","shippingInfo","setShippingInfo","doc","axios","require","res","post","token","localStorage","getItem","data","status","err","console","error","get","isValid","e","preventDefault","target","city","value","street","test","creditCard","sendOrder","deliveryDate","Date","toLocaleDateString","creditCardNumber","shoppingCartId","obj","receiptHandler","text","setFontSize","autoTable","theme","startY","head","body","foot","content","colSpan","rowSpan","styles","halign","save","Array","isArray","result","map","name","productCart","quantity","price","totalPrice","total","forEach","Number","toFixed","date","type","refetchCart","Math","random","push"],"mappings":"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","sourcesContent":["import 'react-datepicker/dist/react-datepicker.css';\r\nimport './Details.css';\r\nimport './DetailsQueries.css'\r\nimport React, { useState, useEffect } from 'react';\r\nimport { IoHelpCircleOutline } from 'react-icons/io5';\r\nimport DatePicker from 'react-datepicker';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\n\r\nconst Details = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch()\r\n    const [userDetails, setUserDetails] = useState();\r\n    const [streetInp, setStreetInp] = useState('');\r\n    const [cityInp, setCityInp] = useState('');\r\n    const [startDate, setStartDate] = useState(null);\r\n    const [cityErrMsg, setCityErrMsg] = useState();\r\n    const [streetErrMsg, setStreetErrMsg] = useState();\r\n    const [dateErrMsg, setDateErrMsg] = useState();\r\n    const [creditCardErrMsg, setCreditCardErrMsg] = useState();\r\n    const cartSummery = useSelector(state => state.getCartSummery);\r\n    const cartId = useSelector(state => state.getCartId);\r\n    const [modalSuccess, setModalSuccess] = useState(false);\r\n    const [orderId, setOrderId] = useState('');\r\n    const [datesFull, setDatesFull] = useState([]);\r\n    const [arrPdf, setArrPdf] = useState([]);\r\n    const [subTotal, setSubTotal] = useState(0);\r\n    const [shippingInfo, setShippingInfo] = useState('');\r\n    const doc = new jsPDF('p', 'pt', 'a4');\r\n    const axios = require('axios');\r\n\r\n    useEffect(() => { // Fetch user shipping address\r\n        (async () => {\r\n            try {\r\n                const res = await axios.post('http://localhost:3001/address', \r\n                {token: localStorage.getItem('token')});\r\n\r\n                res.data.status === '200' && setUserDetails(res.data.data);\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    })();\r\n    }, [axios]);\r\n\r\n    useEffect(() => { // Fetch busy dates\r\n        (async () => {\r\n            try {\r\n                const res = await axios.get('http://localhost:3001/dates');\r\n\r\n                setDatesFull(res.data.data);\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    })();\r\n    }, [axios]);\r\n\r\n    const isValid = (e) => { // Form validation\r\n        e.preventDefault();\r\n        if(e.target.city.value) { // City name validation\r\n            if (e.target.street.value) { // Street name Validation\r\n                if (startDate) {\r\n                    if (/^(?:4[0-9]{12}(?:[0-9]{3})?|[25][1-7][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/.test(e.target.creditCard.value)) { // Credit card valdation\r\n                        sendOrder({\r\n                            city: e.target.city.value,\r\n                            street: e.target.street.value,\r\n                            deliveryDate: new Date(startDate).toLocaleDateString(),\r\n                            creditCardNumber: e.target.creditCard.value,\r\n                            shoppingCartId: cartId,\r\n                            token: localStorage.getItem('token')\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const sendOrder = async (obj) => { // Make an order function\r\n        try {\r\n            const res = await axios.post('http://localhost:3001/order',obj);\r\n\r\n            if (res.data.status === '200') {\r\n                setShippingInfo({city: obj.city, street: obj.street, deliveryDate: obj.deliveryDate});\r\n                setOrderId(res.data.data.orderId);\r\n                setModalSuccess(true);\r\n            }\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    const receiptHandler = () => { // Create the receipt as PDF file\r\n        doc.text('Mazon Online', 45, 30);\r\n        doc.setFontSize(11);\r\n        doc.text(`Bill to: ${localStorage.getItem('fname')} ${localStorage.getItem('lname')}`, 45, 50);\r\n        doc.text(`Order number: ${orderId}`, 45, 70);\r\n        doc.text(`Shipping Address: ${shippingInfo.city}, ${shippingInfo.street}`, 45, 90);\r\n        doc.text(`Delivery Date: ${new Date(shippingInfo.deliveryDate).toLocaleDateString('en-GB')}`, 45, 110);\r\n        doc.text(`${new Date().toLocaleDateString('en-GB')}`, 470, 30);\r\n        doc.autoTable({\r\n            theme: 'plain',\r\n            startY: 120,\r\n            head: [['Description', 'Quantity', 'Total Amount']],     \r\n            body: [...arrPdf],\r\n            foot: [\r\n                [{ content: `Subtotal: $${subTotal}`, colSpan: 2, rowSpan: 2, styles: { halign: 'left' } }]\r\n            ]\r\n        });\r\n        doc.save('Mazon-Online-Receipt.pdf');\r\n    }\r\n\r\n    useEffect(() => { // Set receipt details\r\n     if (Array.isArray(cartSummery)) {\r\n            const result = cartSummery.map(e => {\r\n            return(\r\n                [e.name, e.productCart.quantity, e.productCart.price]\r\n            )});\r\n            setArrPdf(result);\r\n\r\n            const totalPrice = () => {\r\n                let total = 0;\r\n                cartSummery.forEach(e => {\r\n                    total+= Number(e.productCart.price);\r\n                  });\r\n             return total.toFixed(2);\r\n            }\r\n            setSubTotal(totalPrice);\r\n     }\r\n    }, [cartSummery]);\r\n\r\n    return (\r\n        <div className='payment-container'>\r\n            <div className='payment-header'>\r\n                <h2>Billing Information</h2>\r\n            </div>\r\n\r\n            <form className='payment-form' onSubmit={isValid}>\r\n                <div className='city-box'>\r\n                    <label htmlFor='city'>City</label>\r\n                    <input \r\n                        onDoubleClick={() => setCityInp(userDetails.city)}\r\n                        onChange={(e) => {\r\n                            setCityInp(e.target.value);\r\n                            if (e.target.value === '') {\r\n                                setCityErrMsg('Please enter your city name');\r\n                            } else {\r\n                                setCityErrMsg('');\r\n\r\n                            }\r\n                        }}\r\n                        type='text' \r\n                        name='city' \r\n                        id='city' \r\n                        placeholder='Enter your city name'\r\n                        value={cityInp}\r\n                        autoComplete='off'\r\n                    />\r\n                    <div className='help-box'>\r\n                        <span><IoHelpCircleOutline /></span>\r\n                        <span>Double click on the 'City' field to get the defualt value</span>\r\n                    </div>\r\n                { cityErrMsg ? <span className='err-msg'>{cityErrMsg}</span> : null }\r\n                </div>\r\n\r\n                <div className='street-box'>\r\n                    <label htmlFor='street'>Street</label>\r\n                    <input \r\n                        onDoubleClick={() => setStreetInp(userDetails.street)}\r\n                        onChange={(e) => {\r\n                            setStreetInp(e.target.value);\r\n                            if (e.target.value === '') {\r\n                                setStreetErrMsg('Please enter your street address');\r\n                            } else {\r\n                                setStreetErrMsg('');\r\n                            }\r\n                        }}\r\n                        type='street' \r\n                        name='street' \r\n                        id='street'\r\n                        placeholder='Enter your street address'\r\n                        value={streetInp}\r\n                        autoComplete='off'\r\n                    />\r\n                    <div className='help-box'>\r\n                        <span><IoHelpCircleOutline /></span>\r\n                        <span>Double click on the 'Street' field to get the defualt value</span>\r\n                    </div>\r\n                    { streetErrMsg ? <span className='err-msg'>{streetErrMsg}</span> : null }\r\n                </div>\r\n\r\n                <div className='date-box'>\r\n                    <label htmlFor='deliveryDate'>Delivery Date</label>\r\n                        <DatePicker\r\n                            excludeDates={datesFull.map(e=> {\r\n                                return(new Date(e))\r\n                            })}\r\n                            dateFormat='dd/MM/yyyy'\r\n                            wrapperClassName='datePicker'\r\n                            selected={startDate}\r\n                            onChange={(date) => {\r\n                                setStartDate(date);\r\n                                if (date === null) {\r\n                                    setDateErrMsg('Please pick a delivery date');\r\n                                } else {\r\n                                    setDateErrMsg('');\r\n                                }\r\n                            }}\r\n                            minDate={new Date()}\r\n                            placeholderText='Pick a delivery date'\r\n                        />\r\n                        { dateErrMsg ? <div><span className='err-msg'>{dateErrMsg}</span></div> : null }\r\n                        <div className='help-box'>\r\n                        <span><IoHelpCircleOutline /></span>\r\n                        <span>Non-clickable dates are not available for delivery</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='creditCard-box'>\r\n                    <label htmlFor='creditCard'>Credit Card</label>\r\n                    <input \r\n                        type='number' \r\n                        name='creditCard' \r\n                        id='creditCard' \r\n                        autoComplete='off'\r\n                        placeholder='Enter your credit card number'\r\n                        onChange={(e) => {\r\n                            if (/^(?:4[0-9]{12}(?:[0-9]{3})?|[25][1-7][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/.test(e.target.value)) {\r\n                                setCreditCardErrMsg('');\r\n                            } else if (e.target.value === '') {\r\n                                setCreditCardErrMsg('Please enter your credit card number');\r\n                            } else {\r\n                                setCreditCardErrMsg('Card number invalid');\r\n                            }\r\n                        }}\r\n                    />\r\n                    { creditCardErrMsg ? <div><span className='err-msg'>{creditCardErrMsg}</span></div> : null }\r\n                </div>\r\n\r\n                <div>\r\n                    <button \r\n                        type='submit' \r\n                        className='order-btn'\r\n                    >\r\n                        Checkout\r\n                    </button>\r\n                </div>\r\n            </form>\r\n\r\n            { modalSuccess ?\r\n            <div className='modal-success-container'>\r\n                <div className='modal-success-box'>\r\n                        <div className='modal-success'>\r\n                        <div className='modal-success-top'>\r\n                        \r\n                        <h2>Thank you!</h2>\r\n                            <h3>Your order was placed successfuly.</h3>\r\n                            <p>Order number is: <span>{orderId}</span></p>\r\n                        </div>\r\n\r\n                        <div className='modal-success-bottom'>\r\n                            <button \r\n                                onClick={receiptHandler}\r\n                                className='download-btn'\r\n                            >\r\n                                    * Click here to download your receipt.\r\n                            </button>\r\n\r\n                            <button\r\n                                className='btn-back'\r\n                                onClick={() => { \r\n                                    dispatch({type: 'SET_REFETCH_CART', refetchCart: Math.random() * 2 });\r\n                                    history.push('/');\r\n                            }}\r\n                            >\r\n                                Back to shopping \r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : null }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Details;"]},"metadata":{},"sourceType":"module"}