{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Ecommerce-Project\\\\front-end\\\\src\\\\components\\\\main\\\\shelf\\\\addModal\\\\AddModal.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './AddModal.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { IoAddOutline, IoRemoveOutline } from 'react-icons/io5';\nimport { Image } from 'cloudinary-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddModal = () => {\n  _s();\n\n  const selectedProduct = useSelector(state => state.getSelectedProduct);\n  const openCart = useSelector(state => state.getOpenCart);\n  const arr = useSelector(state => state.getProducts);\n  const objProductCart = useSelector(state => state.getProductCart);\n  const dispatch = useDispatch();\n\n  const axios = require('axios');\n\n  const isValid = id => {\n    // Form validation\n    const isProductAdded = objProductCart.find(e => e.id === id);\n\n    if (!isProductAdded) {\n      const found = arr.find(e => e.id === id);\n      selectedProductHandler({\n        quantity: 1,\n        price: found.price,\n        productId: found.id,\n        shoppingCartId: openCart\n      });\n    }\n  };\n\n  const selectedProductHandler = async obj => {\n    // Selected product\n    try {\n      await axios.post('http://localhost:3001/productCart', obj);\n      dispatch({\n        type: 'SET_REFETCH_CART',\n        refetchCart: Math.random() * 2\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const incrementProductCart = async (productId, request) => {\n    // Change product amount\n    try {\n      await axios.put('http://localhost:3001/productCart', {\n        shoppingCartId: openCart,\n        productId: productId,\n        request: request\n      });\n      dispatch({\n        type: 'SET_REFETCH_CART',\n        refetchCart: Math.random() * 2\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-modal-container\",\n    onClick: e => {\n      if (e.target.classList.contains('modal-wraper')) {\n        dispatch({\n          type: 'SET_ADD_MODAL_STATE',\n          addModalState: false\n        });\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-wraper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            cloudName: \"dwv6egkep\",\n            publicId: selectedProduct.img\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"figcaption\", {\n            children: selectedProduct.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedProduct.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-box\",\n          children: objProductCart.find(x => x.id === selectedProduct.id) ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quantity-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => incrementProductCart(selectedProduct.id, 'reduce'),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(IoRemoveOutline, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 39\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: objProductCart.map(k => {\n                return /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: k.id === selectedProduct.id ? k.productCart.quantity : null\n                }, k.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 37\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => incrementProductCart(selectedProduct.id, 'increment'),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(IoAddOutline, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-cart-btn\",\n            onClick: () => {\n              isValid(selectedProduct.id);\n            },\n            children: \"Tambah ke Keranjang\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-close-modal\",\n          onClick: () => {\n            dispatch({\n              type: 'SET_ADD_MODAL_STATE',\n              addModalState: false\n            });\n          },\n          children: \"Tutup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddModal, \"S/qvUfnRufhD2T92+/5n1CNybqI=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = AddModal;\nexport default AddModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddModal\");","map":{"version":3,"sources":["C:/xampp/htdocs/Ecommerce-Project/front-end/src/components/main/shelf/addModal/AddModal.jsx"],"names":["React","useDispatch","useSelector","IoAddOutline","IoRemoveOutline","Image","AddModal","selectedProduct","state","getSelectedProduct","openCart","getOpenCart","arr","getProducts","objProductCart","getProductCart","dispatch","axios","require","isValid","id","isProductAdded","find","e","found","selectedProductHandler","quantity","price","productId","shoppingCartId","obj","post","type","refetchCart","Math","random","err","console","error","incrementProductCart","request","put","target","classList","contains","addModalState","img","name","x","map","k","productCart"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './AddModal.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { IoAddOutline, IoRemoveOutline } from 'react-icons/io5';\r\nimport { Image } from 'cloudinary-react';\r\n\r\nconst AddModal = () => {\r\n    const selectedProduct = useSelector(state => state.getSelectedProduct);\r\n    const openCart = useSelector(state => state.getOpenCart);\r\n    const arr = useSelector(state => state.getProducts);\r\n    const objProductCart = useSelector(state => state.getProductCart);\r\n    const dispatch = useDispatch();\r\n    const axios = require('axios');\r\n\r\n    const isValid = (id) => { // Form validation\r\n        const isProductAdded = objProductCart.find(e => e.id === id);\r\n\r\n        if (!isProductAdded) {\r\n            const found = arr.find(e => e.id === id);\r\n            selectedProductHandler({\r\n                quantity: 1,\r\n                price: found.price,\r\n                productId: found.id,\r\n                shoppingCartId: openCart\r\n            });\r\n        }\r\n    }\r\n\r\n    const selectedProductHandler = async (obj) => { // Selected product\r\n        try {\r\n            await axios.post('http://localhost:3001/productCart', obj);\r\n\r\n            dispatch({type: 'SET_REFETCH_CART', refetchCart: Math.random() * 2 });\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    const incrementProductCart = async (productId, request) => { // Change product amount\r\n        try {\r\n            await axios.put('http://localhost:3001/productCart', \r\n            {shoppingCartId: openCart, productId: productId, request: request});\r\n\r\n            dispatch({type: 'SET_REFETCH_CART', refetchCart: Math.random() * 2 });\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className='add-modal-container' \r\n            onClick={(e) => {\r\n                if (e.target.classList.contains('modal-wraper')) {\r\n                    dispatch({type: 'SET_ADD_MODAL_STATE', addModalState: false });\r\n                }\r\n            }}\r\n        >\r\n            <div className='modal-wraper'>\r\n                <div className='modal-content'>\r\n                    <figure>\r\n                        <Image \r\n                            cloudName='dwv6egkep'\r\n                            publicId={selectedProduct.img}\r\n                        />\r\n                        <figcaption>{selectedProduct.name}</figcaption>\r\n                    </figure>\r\n\r\n                    <div>\r\n                        <p>{selectedProduct.price}</p>\r\n                    </div>\r\n\r\n                    <div className='btn-box'>\r\n                        { objProductCart.find(x => x.id === selectedProduct.id) ?\r\n                        <div className='quantity-box'>\r\n                            <button\r\n                                onClick={() => incrementProductCart(selectedProduct.id, 'reduce')}\r\n                            >\r\n                                <span><IoRemoveOutline /></span>\r\n                            </button>\r\n                            <div>\r\n                            {objProductCart.map(k => {\r\n                                return(\r\n                                    <span key={k.id}>{k.id ===selectedProduct.id ? k.productCart.quantity : null}</span>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                            <button \r\n                                onClick={() => incrementProductCart(selectedProduct.id, 'increment')}\r\n                            >\r\n                            <span><IoAddOutline /></span>\r\n                            </button>\r\n                        </div> \r\n                        :\r\n                        <button className='add-cart-btn'\r\n                            onClick={() => {\r\n                            isValid(selectedProduct.id);\r\n                        }}\r\n                        >\r\n                            Tambah ke Keranjang\r\n                        </button> }\r\n                    </div>\r\n                    <button \r\n                    className='btn-close-modal'\r\n                    onClick={() => {\r\n                        dispatch({type: 'SET_ADD_MODAL_STATE', addModalState: false });\r\n                    }}\r\n                    >\r\n                        Tutup\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddModal;"]},"metadata":{},"sourceType":"module"}