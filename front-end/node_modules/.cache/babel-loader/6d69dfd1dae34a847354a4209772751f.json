{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Ecommerce-Project\\\\front-end\\\\src\\\\components\\\\dashboard\\\\sideBar\\\\editProduct\\\\EditProduct.jsx\",\n    _s = $RefreshSig$();\n\nimport './EditProduct.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Image } from 'cloudinary-react';\nimport { GrPowerReset } from 'react-icons/gr';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditProduct = () => {\n  _s();\n\n  const [previewSource, setPreviewSource] = useState('');\n  const [spinnerState, setSpinnerState] = useState(false);\n  const [obj, setObj] = useState({});\n  const [category, setCategory] = useState('');\n  const [errMsgPrice, setErrMsgPrice] = useState('');\n  const form = useRef();\n  const select = useRef(null);\n  const arrCategory = useSelector(state => state.getCategories);\n  const objProduct = useSelector(state => state.getProduct);\n  const dispatch = useDispatch();\n\n  const axios = require('axios');\n\n  const handleTextInputChange = e => {\n    // Input text validation\n    e.preventDefault();\n    obj.id = e.target.id; // Add product id\n\n    if (e.target.productName.value !== '') {\n      // Product name validation\n      obj.name = e.target.productName.value;\n    } else {\n      delete obj.name;\n    }\n\n    if (e.target.category.value) {\n      // Category validation\n      const found = arrCategory.find(category => category.name === e.target.category.value);\n\n      if (found) {\n        obj.categoryId = e.target.category.value;\n      }\n    } else {\n      delete obj.categoryId;\n    }\n\n    if (e.target.price.value) {\n      // Price validation\n      if (/^\\d*\\.?\\d{2}$/.test(e.target.price.value)) {\n        obj.price = e.target.price.value;\n      } else {\n        setErrMsgPrice('Please enter a decimal value');\n        delete obj.price;\n      }\n    }\n\n    return isValid();\n  };\n\n  const handleFileInputChange = e => {\n    // Input file (img) validation\n    if (e.target.files[0]) {\n      if (/^.*\\.(jpg|JPG|png|PNG|jpeg|JPEG)$/.test(e.target.files[0].name)) {\n        e.target.setCustomValidity('');\n        const file = e.target.files[0];\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n\n        reader.onloadend = () => {\n          if (file) {\n            obj.img = reader.result;\n            previewFile(file);\n          }\n        };\n\n        reader.onerror = () => {\n          console.error('Failed to generate the image');\n        };\n      } else {\n        e.target.setCustomValidity(`Supported file formats: JPG/JPEG and PNG`);\n        e.target.reportValidity();\n      }\n    }\n  };\n\n  const previewFile = file => {\n    // Img preview function\n    if (file) {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onloadend = () => {\n        setPreviewSource(reader.result);\n      };\n    }\n  };\n\n  const isValid = () => {\n    // Object validation function\n    if (Object.keys(obj).length >= 2) {\n      editProduct();\n    } else {\n      console.error('No changes detected');\n    }\n  };\n\n  const editProduct = async () => {\n    // Fetch product update\n    try {\n      setSpinnerState(true);\n      const res = await axios.put('http://localhost:3001/product', obj);\n      setSpinnerState(false);\n\n      if (res.data.status === '200') {\n        dispatch({\n          type: 'SET_REFETCH',\n          refetch: Math.random() * 2\n        });\n        setObj({});\n        form.current.reset();\n      } else {\n        console.error('Something went wrong');\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    // Set dynamically the current category option\n    const found = arrCategory.find(e => e.id === objProduct.categoryId);\n\n    if (found) {\n      setCategory(found.name);\n    }\n\n    form.current.reset();\n  }, [objProduct, arrCategory]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"edit-product-form\",\n    onSubmit: handleTextInputChange,\n    autoComplete: \"off\",\n    id: objProduct.id,\n    ref: form,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        id: \"image\",\n        accept: \"image/png, image/jpeg, image/jpg\",\n        onChange: handleFileInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"figure\", {\n        className: \"img-preview-box\",\n        children: previewSource ? /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: previewSource,\n            alt: \"Preview\",\n            title: \"Click to select image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            cloudName: \"itamarrosenblum\",\n            publicId: objProduct.img,\n            title: \"Click to select image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-name-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"productName\",\n        children: \"Product Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"productName\",\n        id: \"productName\",\n        placeholder: objProduct.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"category\",\n        children: \"Select a Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-box-wraper\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"category\",\n          id: \"category\",\n          defaultValue: \"\",\n          ref: select,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            disabled: true,\n            hidden: true,\n            value: \"\",\n            children: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this), arrCategory.map(e => {\n            if (e.name !== category) {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                id: e.id,\n                value: e.name,\n                children: e.name\n              }, e.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 37\n              }, this);\n            }\n\n            return null;\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"select-reset-btn\",\n          type: \"button\",\n          title: \"Click to Reset\",\n          onClick: () => select.current.value = '',\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(GrPowerReset, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"price-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: \"Product Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"price\",\n        id: \"price\",\n        placeholder: objProduct.price && `$${objProduct.price}`,\n        onChange: e => {\n          if (e.target.value.length > 0) {\n            setErrMsgPrice('');\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"err-msg\",\n        children: errMsgPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-box\",\n      children: spinnerState ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `spinner ${spinnerState}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bounce1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bounce2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bounce3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn-edit\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditProduct, \"QXuqo6OKTKAAOl6o298djQN6+fo=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = EditProduct;\nexport default EditProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProduct\");","map":{"version":3,"sources":["C:/xampp/htdocs/Ecommerce-Project/front-end/src/components/dashboard/sideBar/editProduct/EditProduct.jsx"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","Image","GrPowerReset","EditProduct","previewSource","setPreviewSource","spinnerState","setSpinnerState","obj","setObj","category","setCategory","errMsgPrice","setErrMsgPrice","form","select","arrCategory","state","getCategories","objProduct","getProduct","dispatch","axios","require","handleTextInputChange","e","preventDefault","id","target","productName","value","name","found","find","categoryId","price","test","isValid","handleFileInputChange","files","setCustomValidity","file","reader","FileReader","readAsDataURL","onloadend","img","result","previewFile","onerror","console","error","reportValidity","Object","keys","length","editProduct","res","put","data","status","type","refetch","Math","random","current","reset","err","map"],"mappings":"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","sourcesContent":["import './EditProduct.css';\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Image } from 'cloudinary-react';\r\nimport { GrPowerReset } from 'react-icons/gr';\r\n\r\nconst EditProduct = () => {\r\n    const [previewSource, setPreviewSource] = useState('');\r\n    const [spinnerState, setSpinnerState] = useState(false);\r\n    const [obj, setObj] = useState({});\r\n    const [category, setCategory] = useState('');\r\n    const [errMsgPrice, setErrMsgPrice] = useState('');\r\n    const form = useRef();\r\n    const select = useRef(null);\r\n    const arrCategory = useSelector(state => state.getCategories);\r\n    const objProduct = useSelector(state => state.getProduct);\r\n    const dispatch = useDispatch();\r\n    const axios = require('axios');\r\n\r\n    const handleTextInputChange = (e) => { // Input text validation\r\n        e.preventDefault();\r\n\r\n        obj.id = e.target.id; // Add product id\r\n\r\n        if (e.target.productName.value !== '') { // Product name validation\r\n            obj.name = e.target.productName.value;\r\n        } else {\r\n            delete obj.name;\r\n        }\r\n\r\n        if (e.target.category.value) { // Category validation\r\n            const found = arrCategory.find(category => category.name === e.target.category.value);\r\n            if (found) {\r\n                obj.categoryId = e.target.category.value;\r\n            }\r\n        } else {\r\n            delete obj.categoryId;\r\n        }\r\n\r\n        if (e.target.price.value) { // Price validation\r\n            if (/^\\d*\\.?\\d{2}$/.test(e.target.price.value)) {\r\n                obj.price = e.target.price.value;\r\n            } else {\r\n                setErrMsgPrice('Please enter a decimal value');\r\n                delete obj.price;\r\n            }\r\n        }\r\n\r\n        return isValid();\r\n    }\r\n\r\n    const handleFileInputChange = (e) => { // Input file (img) validation\r\n        if (e.target.files[0]) {\r\n            if (/^.*\\.(jpg|JPG|png|PNG|jpeg|JPEG)$/.test(e.target.files[0].name)) {\r\n                e.target.setCustomValidity('');\r\n\r\n                const file = e.target.files[0];\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(file);\r\n        \r\n                reader.onloadend = () => {\r\n                   if (file) {\r\n                    obj.img = reader.result;\r\n                    previewFile(file);\r\n                   }\r\n                }\r\n                \r\n                reader.onerror = () => {\r\n                    console.error('Failed to generate the image');\r\n                }    \r\n            } else {\r\n                e.target.setCustomValidity(`Supported file formats: JPG/JPEG and PNG`);\r\n                e.target.reportValidity();\r\n            }\r\n        }\r\n    }\r\n\r\n    const previewFile = (file) => { // Img preview function\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onloadend = () => {\r\n                setPreviewSource(reader.result);\r\n            }\r\n        }\r\n    }\r\n\r\n    const isValid = () => { // Object validation function\r\n        if (Object.keys(obj).length >= 2) {\r\n            editProduct();\r\n        } else {\r\n            console.error('No changes detected');\r\n        }\r\n    }\r\n\r\n    const editProduct = async () => { // Fetch product update\r\n        try {\r\n            setSpinnerState(true);\r\n            const res = await axios.put('http://localhost:3001/product', obj);\r\n\r\n            setSpinnerState(false);\r\n\r\n            if (res.data.status === '200') {\r\n                dispatch({type: 'SET_REFETCH', refetch: Math.random() * 2});\r\n                setObj({});\r\n                form.current.reset();\r\n            } else {\r\n                console.error('Something went wrong');\r\n            }\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    useEffect(() => { // Set dynamically the current category option\r\n        const found = arrCategory.find(e => e.id === objProduct.categoryId);\r\n        if (found) {\r\n            setCategory(found.name);\r\n        }\r\n        form.current.reset();\r\n    }, [objProduct, arrCategory]);\r\n\r\n    return (\r\n        <form \r\n            className='edit-product-form' \r\n            onSubmit={handleTextInputChange}  \r\n            autoComplete='off' \r\n            id={objProduct.id} \r\n            ref={form}\r\n        >\r\n            <div className='img-box'>\r\n                <input \r\n                    type='file' \r\n                    name='image' \r\n                    id='image'\r\n                    accept='image/png, image/jpeg, image/jpg'\r\n                    onChange={handleFileInputChange}\r\n                />\r\n\r\n                \r\n                <figure className='img-preview-box'>\r\n                    { previewSource ? \r\n                    <label htmlFor='image'>\r\n                        <img src={previewSource} alt='Preview' title='Click to select image' />\r\n                    </label>\r\n                    : \r\n                    <label htmlFor='image'>\r\n                        <Image cloudName='itamarrosenblum'publicId={objProduct.img} title='Click to select image' />\r\n                    </label> }\r\n                </figure>\r\n                \r\n            </div>\r\n\r\n            <div className='product-name-box'>\r\n                <label htmlFor='productName'>Product Name</label>\r\n                <input\r\n                    type='text'\r\n                    name='productName'\r\n                    id='productName'\r\n                    placeholder={objProduct.name}\r\n                />\r\n            </div>\r\n\r\n            <div className='category-box'>\r\n                <label htmlFor='category'>Select a Category</label>\r\n                <div className='category-box-wraper'>\r\n                    <select \r\n                        name='category' \r\n                        id='category' \r\n                        defaultValue=''\r\n                        ref={select}\r\n                        \r\n                    >\r\n                        <option disabled hidden value=''>\r\n                            {category}\r\n                        </option>\r\n                        {arrCategory.map(e => {\r\n                            if (e.name !== category) {\r\n                                return(\r\n                                    <option \r\n                                        id={e.id} \r\n                                        value={e.name} \r\n                                        key={e.id}\r\n                                    >\r\n                                        {e.name}\r\n                                    </option>\r\n                                );\r\n                            }\r\n                            return null;\r\n                        })}\r\n                    </select>\r\n                    <button \r\n                        className='select-reset-btn'\r\n                        type='button'\r\n                        title='Click to Reset'\r\n                        onClick={() => select.current.value = ''}\r\n                    >\r\n                        <span><GrPowerReset /></span>\r\n                    </button>\r\n                </div>\r\n            </div> \r\n\r\n            <div className='price-box'>\r\n                <label htmlFor='price'>Product Price</label>\r\n                <input \r\n                    type='text' \r\n                    name='price' \r\n                    id='price' \r\n                    placeholder={objProduct.price && `$${objProduct.price}`}\r\n                    onChange={(e) => {\r\n                        if (e.target.value.length > 0) {\r\n                            setErrMsgPrice('');\r\n                        }\r\n                    }}\r\n                />\r\n                <span className='err-msg'>{errMsgPrice}</span>\r\n            </div>\r\n                        \r\n            <div className='btn-box'>\r\n                {spinnerState ?\r\n                    <div className='spinner-box'>\r\n                        <div className={`spinner ${spinnerState}`}>\r\n                            <div className='bounce1'></div>\r\n                            <div className='bounce2'></div>\r\n                            <div className='bounce3'></div>\r\n                        </div>\r\n                    </div> \r\n                    : \r\n                    <button type='submit' className='btn-edit'>\r\n                        Save Changes\r\n                    </button>\r\n                }\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default EditProduct;"]},"metadata":{},"sourceType":"module"}