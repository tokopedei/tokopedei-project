{"ast":null,"code":"import React, { createContext, createRef, PureComponent, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Transformation as Transformation$1, Util, Cloudinary } from 'cloudinary-core';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded$2 = [\"public_id\"],\n    _excluded2 = [\"publicId\"],\n    _excluded3 = [\"children\"],\n    _excluded4 = [\"children\", \"accessibility\", \"placeholder\"];\nvar camelCase$1 = Util.camelCase,\n    withCamelCaseKeys = Util.withCamelCaseKeys,\n    isEmpty = Util.isEmpty; // props passed to cloudinary-core but should not be rendered as dom attributes\n\nvar CLOUDINARY_REACT_PROPS = ['accessibility', 'breakpoints', 'dataSrc', 'placeholder', 'publicId', 'signature', 'authToken'];\n/**\n * Convert common video file extensions to mime types\n * Most other common video file extensions have an identical mime type so do not need conversion.\n */\n\nvar VIDEO_MIME_TYPES = {\n  flv: 'x-flv',\n  '3gp': '3gpp',\n  mov: 'quicktime',\n  mpg: 'mpeg',\n  avi: 'x-msvideo',\n  wmv: 'x-ms-wmv',\n  ogv: 'ogg'\n};\n/**\n * Convert common audio file extensions to mime types\n * Most other common audio file extensions have an identical mime type so do not need conversion.\n */\n\nvar AUDIO_MIME_TYPES = {\n  m4a: 'mp4',\n  wav: 'vnd.wav',\n  m3u: 'x-mpegurl',\n  mp3: 'mpeg',\n  ogv: 'ogg',\n  aif: 'x-aiff',\n  aifc: 'x-aiff',\n  aiff: 'x-aiff'\n}; // props passed to cloudinary-core for dom elements attributes generation\n// Map Cloudinary props from array to object for efficient lookup\n\nvar CLOUDINARY_PROPS = [].concat(Transformation$1.PARAM_NAMES, CLOUDINARY_REACT_PROPS).map(Util.camelCase).reduce(function (accumulator, cloudinaryPropName) {\n  accumulator[cloudinaryPropName] = true;\n  return accumulator;\n}, {});\n/**\n * Return object without null/undefined entries\n * @param {*} obj\n */\n\nvar nonEmpty = function nonEmpty(obj) {\n  return Object.entries(obj).reduce(function (a, _ref) {\n    var _extends2;\n\n    var k = _ref[0],\n        v = _ref[1];\n    return v == null ? a : _extends({}, a, (_extends2 = {}, _extends2[k] = v, _extends2));\n  }, {});\n};\n/**\n * Generated a configured Cloudinary object.\n * @param extendedProps React props combined with custom Cloudinary configuration options\n * @return {Cloudinary} configured using extendedProps\n */\n\n\nvar getConfiguredCloudinary = function getConfiguredCloudinary(extendedProps) {\n  // eslint-disable-next-line camelcase\n  var _nonEmpty = nonEmpty(extendedProps),\n      ops = _objectWithoutPropertiesLoose(_nonEmpty, _excluded$2); // Remove null/undefined props\n\n\n  var options = Util.withSnakeCaseKeys(ops);\n  return Cloudinary[\"new\"](options);\n};\n\nvar getTag = function getTag(props, tagType) {\n  var publicId = props.publicId,\n      ops = _objectWithoutPropertiesLoose(props, _excluded2); // Remove null/undefined props\n\n\n  var cld = getConfiguredCloudinary(ops);\n  return cld[tagType + \"Tag\"](publicId, Util.withSnakeCaseKeys(ops));\n};\n/**\n * Get a new <img> tag initialized with given props\n * @param {*} props\n */\n\n\nvar getImageTag = function getImageTag(props) {\n  return getTag(props, 'image');\n};\n/**\n * Cloudinary underlying JS library will handle responsive behavior\n * @param {HTMLImageElement} img\n * @param {object} options\n * @Return callback that when called, will remove the listener created by Cloudinary.responsive\n */\n\n\nvar makeElementResponsive = function makeElementResponsive(img, options) {\n  var snakeCaseOptions = Util.withSnakeCaseKeys(options);\n  var cld = getConfiguredCloudinary(snakeCaseOptions); // Initialize cloudinary with new props\n\n  cld.cloudinary_update(img, snakeCaseOptions);\n  return cld.responsive(snakeCaseOptions, false);\n};\n/**\n * Extracts cloudinaryProps and nonCloudinaryProps from given props\n *\n * @param props\n * @returns {{children: *, cloudinaryReactProps: {}, cloudinaryProps: {}, nonCloudinaryProps: {}}}\n */\n\n\nvar extractCloudinaryProps = function extractCloudinaryProps(_ref2) {\n  var children = _ref2.children,\n      props = _objectWithoutPropertiesLoose(_ref2, _excluded3);\n\n  var result = {\n    children: children,\n    cloudinaryProps: {},\n    nonCloudinaryProps: {},\n    cloudinaryReactProps: {}\n  };\n  Object.keys(props).forEach(function (key) {\n    var camelKey = Util.camelCase(key);\n    var value = props[key]; // if valid and defined add to cloudinaryProps\n\n    if (CLOUDINARY_PROPS[camelKey]) {\n      if (props[key] !== undefined && props[key] !== null) {\n        result.cloudinaryProps[camelKey] = value;\n      }\n    } else if (camelKey === 'includeOwnBody') {\n      // cloudinary-react specific prop\n      result.cloudinaryReactProps[camelKey] = value;\n    } else {\n      // not valid so add to nonCloudinaryProps\n      result.nonCloudinaryProps[key] = value;\n    }\n  });\n  return result;\n};\n/**\n * Check if given component is a Cloudinary Component with given displayName\n * @param component the component to check\n * @param displayName of wanted component\n * @return {boolean}\n */\n\n\nvar isCloudinaryComponent = function isCloudinaryComponent(component, displayName) {\n  return !!( /*#__PURE__*/React.isValidElement(component) && component.type && component.type.displayName === displayName);\n};\n/**\n * Combine properties of all options to create an option Object that can be passed to Cloudinary methods.<br>\n *   `undefined` and `null` values are filtered out.\n * @protected\n * @returns {Object}\n * @param options one or more options objects\n */\n\n\nvar normalizeOptions = function normalizeOptions() {\n  return [].slice.call(arguments).reduce(function (left, right) {\n    Object.keys(right || {}).forEach(function (key) {\n      var value = right[key];\n\n      if (value !== null && value !== undefined) {\n        left[key] = value;\n      }\n    });\n    return left;\n  }, {});\n};\n\nvar getChildPlaceholder = function getChildPlaceholder(children) {\n  var result = null;\n\n  if (children) {\n    result = React.Children.toArray(children).find(function (child) {\n      return isCloudinaryComponent(child, 'CloudinaryPlaceholder');\n    });\n  }\n\n  return result;\n};\n\nvar getChildTransformations = function getChildTransformations(children) {\n  var result = children ? React.Children.toArray(children).filter(function (child) {\n    return isCloudinaryComponent(child, 'CloudinaryTransformation');\n  }).map(function (child) {\n    var options = normalizeOptions(child.props, child.context);\n    var childOptions = getChildTransformations(child.props.children);\n\n    if (childOptions) {\n      options.transformation = childOptions;\n    }\n\n    return options;\n  }) : [];\n  return result.length ? result : null;\n};\n/**\n * Return a new object containing keys and values where keys are in the keys list\n * @param {object} source Object to copy values from\n * @param {string[]} [keys=[]] a list of keys\n * @returns {object} an object with copied values\n */\n\n\nvar only = function only(source, keys) {\n  if (keys === void 0) {\n    keys = [];\n  }\n\n  if (!source) {\n    return source;\n  }\n\n  return keys.reduce(function (tr, key) {\n    if (key in source) {\n      tr[key] = source[key];\n    }\n\n    return tr;\n  }, {});\n};\n/**\n   * Create a React type definition object. All items are PropTypes.string or [string] or object or [object].\n   * @param {Array} configParams a list of parameter names\n   * @returns {Object}\n   * @private\n   */\n\n\nvar typesFrom = function typesFrom(configParams) {\n  configParams = configParams || [];\n  var types = {};\n\n  for (var i = 0; i < configParams.length; i++) {\n    var key = configParams[i];\n    types[camelCase$1(key)] = PropTypes.any;\n  }\n\n  return types;\n};\n/**\n * Returns an object with all the transformation parameters based on the context and properties of this element\n * and any children.\n * @param extendedProps\n * @returns {object} a hash of transformation and configuration parameters\n * @protected\n */\n\n\nvar getTransformation = function getTransformation(extendedProps) {\n  var children = extendedProps.children,\n      accessibility = extendedProps.accessibility,\n      placeholder = extendedProps.placeholder,\n      rest = _objectWithoutPropertiesLoose(extendedProps, _excluded4);\n\n  var ownTransformation = only(withCamelCaseKeys(rest), Transformation$1.methods) || {};\n  var childrenOptions = getChildTransformations(children);\n\n  if (!isEmpty(childrenOptions)) {\n    ownTransformation.transformation = childrenOptions;\n  } // Append placeholder and accessibility if exists\n\n\n  var advancedTransformations = {\n    accessibility: accessibility,\n    placeholder: placeholder\n  };\n  Object.keys(advancedTransformations).filter(function (k) {\n    return advancedTransformations[k];\n  }).forEach(function (k) {\n    ownTransformation[k] = advancedTransformations[k];\n  });\n  return ownTransformation;\n};\n\nvar CloudinaryContextType = /*#__PURE__*/createContext();\nvar camelCase = Util.camelCase;\n/**\n * A base component for Cloudinary components.\n * @protected\n */\n\nvar CloudinaryComponent = /*#__PURE__*/function (_PureComponent) {\n  _inheritsLoose(CloudinaryComponent, _PureComponent);\n\n  function CloudinaryComponent(_props, _context) {\n    var _this;\n\n    _this = _PureComponent.call(this, _props, _context) || this;\n\n    _this.getContext = function () {\n      return _this.context || {};\n    };\n\n    _this.onIntersect = function () {\n      // eslint-disable-next-line react/no-unused-state\n      _this.setState({\n        isInView: true\n      });\n    };\n\n    _this.getExtendedProps = function (props, context) {\n      if (props === void 0) {\n        props = _this.props;\n      }\n\n      if (context === void 0) {\n        context = _this.getContext();\n      }\n\n      return normalizeOptions(context, props);\n    };\n\n    _this.attachRef = function (element) {\n      var innerRef = _this.props.innerRef;\n      _this.element.current = element;\n\n      if (innerRef) {\n        if (innerRef instanceof Function) {\n          innerRef(element);\n        } else {\n          innerRef.current = element;\n        }\n      }\n    };\n\n    _this.element = /*#__PURE__*/createRef();\n    return _this;\n  }\n\n  var _proto = CloudinaryComponent.prototype;\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return CloudinaryComponent;\n}(PureComponent);\n\nCloudinaryComponent.defaultProps = {\n  innerRef: null,\n  publicId: null\n};\nCloudinaryComponent.propTypes = _extends({}, typesFrom(Transformation$1.PARAM_NAMES.map(camelCase)), {\n  innerRef: PropTypes.any,\n  publicId: PropTypes.string\n});\nCloudinaryComponent.contextType = CloudinaryContextType;\n/**\n * Provides a container for Cloudinary components. Any option set in CloudinaryContext will be passed to the children.\n *\n * @example\n *<CloudinaryContext cloudName=\"mycloud\" dpr=\"auto\">\n *    <!-- other tags -->\n *    <Image publicId={id}/>\n *</CloudinaryContext>\n *\n */\n\nvar CloudinaryContext = /*#__PURE__*/function (_CloudinaryComponent) {\n  _inheritsLoose(CloudinaryContext, _CloudinaryComponent);\n\n  function CloudinaryContext() {\n    return _CloudinaryComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = CloudinaryContext.prototype;\n\n  _proto.render = function render() {\n    var props = _extends({}, this.getContext(), this.props);\n\n    var _extractCloudinaryPro = extractCloudinaryProps(props),\n        children = _extractCloudinaryPro.children,\n        cloudinaryProps = _extractCloudinaryPro.cloudinaryProps,\n        nonCloudinaryProps = _extractCloudinaryPro.nonCloudinaryProps,\n        cloudinaryReactProps = _extractCloudinaryPro.cloudinaryReactProps;\n\n    return /*#__PURE__*/React.createElement(CloudinaryContextType.Provider, {\n      value: cloudinaryProps\n    }, cloudinaryReactProps.includeOwnBody ? children : /*#__PURE__*/React.createElement(\"div\", nonCloudinaryProps, children));\n  };\n\n  return CloudinaryContext;\n}(CloudinaryComponent);\n\nCloudinaryContext.propTypes = _extends({}, CloudinaryComponent.propTypes, {\n  includeOwnBody: PropTypes.bool\n});\nCloudinaryContext.defaultProps = {\n  includeOwnBody: false\n};\nvar _excluded$1 = [\"children\", \"innerRef\"];\nvar RESPONSIVE_OVERRIDE_WARNING = \"\\nWarning: passing a number value for width cancels the 'responsive' prop's effect on the image transformation.\\nThe 'responsive' prop affects the image transformation only when width === 'auto'.\\nPassing 'width=\\\"auto\\\" responsive' will affect the actual image width that is fetched from Cloudinary.\\nThe 'responsive' prop causes the Image component to request an image which width is equal to the width of it's container.\\nWhen passing 'width=\\\"auto\\\" responsive', you can set the <img> element width by passing a 'style' prop\".trim();\n/**\n * A component representing a Cloudinary served image\n */\n\nvar Image = /*#__PURE__*/function (_CloudinaryComponent) {\n  _inheritsLoose(Image, _CloudinaryComponent);\n\n  function Image(props, context) {\n    var _this;\n\n    _this = _CloudinaryComponent.call(this, props, context) || this;\n\n    _this.isResponsive = function () {\n      var _this$getExtendedProp = _this.getExtendedProps(),\n          responsive = _this$getExtendedProp.responsive,\n          width = _this$getExtendedProp.width;\n\n      if (responsive && width !== 'auto') {\n        console.warn(RESPONSIVE_OVERRIDE_WARNING);\n      }\n\n      return responsive && _this.element && _this.element.current;\n    };\n\n    _this.getOptions = function () {\n      var extendedProps = _this.getExtendedProps();\n\n      var _extendedProps$getTra = _extends({}, extendedProps, getTransformation(extendedProps)),\n          options = _objectWithoutPropertiesLoose(_extendedProps$getTra, _excluded$1);\n\n      if (!_this.shouldLazyLoad()) {\n        delete options.loading;\n      }\n\n      return options;\n    };\n\n    _this.getAttributes = function (additionalOptions) {\n      if (additionalOptions === void 0) {\n        additionalOptions = {};\n      }\n\n      var _additionalOptions = additionalOptions,\n          placeholder = _additionalOptions.placeholder;\n      var options = extractCloudinaryProps(_extends({}, _this.getOptions(), additionalOptions));\n      var cloudinaryProps = options.cloudinaryProps,\n          nonCloudinaryProps = options.nonCloudinaryProps,\n          cloudinaryReactProps = options.cloudinaryReactProps;\n      var imageTag = getImageTag(_extends({}, cloudinaryProps, cloudinaryReactProps));\n      var cloudinaryAttributes = Util.withCamelCaseKeys(imageTag.attributes()); // React requires camelCase instead of snake_case attributes\n\n      var attributes = _extends({}, cloudinaryAttributes, nonCloudinaryProps); // We want to keep 'data-src' if it exists\n\n\n      if (attributes.dataSrc) {\n        attributes['data-src'] = attributes.dataSrc;\n      } // Set placeholder Id\n\n\n      if (placeholder && attributes.id) {\n        attributes.id += '-cld-placeholder';\n      } // Set data-src if lazy loading and not in view\n\n\n      if (_this.shouldLazyLoad()) {\n        attributes['data-src'] = attributes.dataSrc || attributes.src;\n        delete attributes.src;\n      } // Remove unneeded attributes,\n\n\n      CLOUDINARY_REACT_PROPS.forEach(function (attr) {\n        delete attributes[attr];\n      });\n      return attributes;\n    };\n\n    _this.update = function () {\n      // Handle lazy loading\n      if (_this.shouldLazyLoad()) {\n        // Will set this.state.isInView = true when in view\n        Util.detectIntersection(_this.element.current, _this.onIntersect);\n      } else if (_this.isResponsive()) {\n        var options = _this.getOptions();\n\n        var placeholder = _this.getPlaceholderType(); // Make placeholder responsive\n\n\n        if (placeholder) {\n          var removePlaceholderListener = makeElementResponsive(_this.placeholderElement.current, _extends({}, options, {\n            placeholder: placeholder\n          }));\n\n          _this.listenerRemovers.push(removePlaceholderListener);\n        } // Make original image responsive\n\n\n        var removeImgListener = makeElementResponsive(_this.element.current, options);\n\n        _this.listenerRemovers.push(removeImgListener);\n      }\n    };\n\n    _this.shouldLazyLoad = function () {\n      var _this$getExtendedProp2 = _this.getExtendedProps(),\n          loading = _this$getExtendedProp2.loading;\n\n      var isInView = _this.state.isInView;\n      return !isInView && (loading === 'lazy' || loading === 'auto');\n    };\n\n    _this.handleImageLoaded = function () {\n      var onLoad = _this.props.onLoad;\n\n      _this.setState({\n        isLoaded: true\n      }, function () {\n        if (onLoad) {\n          onLoad();\n        }\n      });\n    };\n\n    _this.renderPlaceholder = function (placeholder, attributes) {\n      attributes.style = _extends({}, attributes.style || {}, {\n        opacity: 0,\n        position: 'absolute'\n      });\n      attributes.onLoad = _this.handleImageLoaded;\n      var placeholderWrapperStyle = {\n        display: 'inline'\n      };\n\n      var placeholderAttributes = _this.getAttributes({\n        placeholder: placeholder\n      });\n\n      return /*#__PURE__*/React.createElement(Fragment, null, _this.renderImage(attributes), /*#__PURE__*/React.createElement(\"div\", {\n        style: placeholderWrapperStyle\n      }, /*#__PURE__*/React.createElement(\"img\", _extends({\n        ref: _this.placeholderElement\n      }, placeholderAttributes))));\n    };\n\n    _this.renderImage = function (attributes) {\n      return /*#__PURE__*/React.createElement(\"img\", _extends({\n        ref: _this.attachRef\n      }, attributes));\n    };\n\n    _this.getPlaceholderType = function () {\n      var _this$getExtendedProp3 = _this.getExtendedProps(),\n          children = _this$getExtendedProp3.children;\n\n      var placeholder = getChildPlaceholder(children);\n      return placeholder ? placeholder.props.type : null;\n    };\n\n    _this.placeholderElement = /*#__PURE__*/createRef();\n    _this.state = {\n      isLoaded: false\n    };\n    _this.listenerRemovers = [];\n    return _this;\n  }\n  /**\n   * @return true when this image element should be made responsive, false otherwise.\n   */\n\n\n  var _proto = Image.prototype;\n  /**\n   * Invoked immediately after a component is mounted (inserted into the tree)\n   */\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.update();\n  }\n  /**\n   * Invoked immediately after updating occurs. This method is not called for the initial render.\n   */\n  ;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    this.update();\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.listenerRemovers.forEach(function (removeListener) {\n      return removeListener();\n    });\n  }\n  /**\n   * Updates this Image's isLoaded state,\n   * And fires props.onLoad if exists.\n   */\n  ;\n\n  _proto.render = function render() {\n    var isLoaded = this.state.isLoaded;\n    var attributes = this.getAttributes();\n    var placeholder = this.getPlaceholderType(); // If image wasn't loaded and there's a child placeholder then we render it.\n\n    if (!isLoaded && placeholder) {\n      return this.renderPlaceholder(placeholder, attributes);\n    }\n\n    return this.renderImage(attributes);\n  };\n\n  return Image;\n}(CloudinaryComponent);\n\nImage.defaultProps = {};\nImage.propTypes = CloudinaryComponent.propTypes;\nImage.propTypes.responsive = PropTypes.bool;\nImage.propTypes.loading = PropTypes.string;\nImage.propTypes.accessibility = PropTypes.string;\n/**\n * Define a transformation that is applied to the parent tag.\n */\n\nvar Transformation = /*#__PURE__*/function (_CloudinaryComponent) {\n  _inheritsLoose(Transformation, _CloudinaryComponent);\n\n  function Transformation() {\n    return _CloudinaryComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = Transformation.prototype;\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return Transformation;\n}(CloudinaryComponent);\n\nTransformation.propTypes = CloudinaryComponent.propTypes;\nTransformation.defaultProps = {};\nTransformation.exposesProps = true;\nTransformation.displayName = 'CloudinaryTransformation';\nvar _excluded = [\"innerRef\", \"publicId\", \"fallback\", \"children\", \"sourceTypes\", \"sourceTransformation\", \"sources\"];\n/**\n * A component representing a Cloudinary served video\n */\n\nvar Video = /*#__PURE__*/function (_CloudinaryComponent) {\n  _inheritsLoose(Video, _CloudinaryComponent);\n\n  function Video() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _CloudinaryComponent.call.apply(_CloudinaryComponent, [this].concat(args)) || this;\n    _this.mimeType = 'video';\n    _this.mimeSubTypes = VIDEO_MIME_TYPES;\n\n    _this.getMergedProps = function () {\n      return _extends({}, _this.getContext(), _this.props);\n    };\n\n    _this.generateVideoUrl = function (cld, publicId, childTransformations, sourceTransformations, sourceType) {\n      var urlOptions = Util.withSnakeCaseKeys(Util.defaults({}, sourceTransformations, childTransformations, {\n        resource_type: 'video',\n        format: sourceType\n      }));\n      return cld.url(publicId, urlOptions);\n    };\n\n    _this.generateUsingSourceTypes = function (cld, publicId, childTransformations, sourceTransformations, sourceTypes) {\n      return sourceTypes.map(function (sourceType) {\n        return _this.toSourceTag(cld, publicId, childTransformations, sourceTransformations[sourceType] || {}, sourceType, _this.buildMimeType(sourceType));\n      });\n    };\n\n    _this.generateUsingSources = function (cld, publicId, childTransformations, sources) {\n      return sources.map(function (_ref) {\n        var _ref$transformations = _ref.transformations,\n            transformations = _ref$transformations === void 0 ? {} : _ref$transformations,\n            type = _ref.type,\n            codecs = _ref.codecs;\n        return _this.toSourceTag(cld, publicId, childTransformations, transformations, type, _this.buildMimeType(type, codecs));\n      });\n    };\n\n    _this.toSourceTag = function (cld, publicId, childTransformations, transformations, sourceType, mimeType) {\n      var src = _this.generateVideoUrl(cld, publicId, childTransformations, transformations, sourceType);\n\n      return /*#__PURE__*/React.createElement(\"source\", {\n        key: src + mimeType,\n        src: src,\n        type: mimeType\n      });\n    };\n\n    _this.buildMimeType = function (type, codecs) {\n      var mimeType = _this.mimeType + \"/\" + (_this.mimeSubTypes[type] || type);\n\n      if (!Util.isEmpty(codecs)) {\n        mimeType += \"; codecs=\" + (Util.isArray(codecs) ? codecs.join(', ') : codecs);\n      }\n\n      return mimeType;\n    };\n\n    _this.getVideoTagProps = function () {\n      var _this$getMergedProps = _this.getMergedProps(),\n          publicId = _this$getMergedProps.publicId,\n          children = _this$getMergedProps.children,\n          sourceTypes = _this$getMergedProps.sourceTypes,\n          _this$getMergedProps$ = _this$getMergedProps.sourceTransformation,\n          sourceTransformation = _this$getMergedProps$ === void 0 ? {} : _this$getMergedProps$,\n          sources = _this$getMergedProps.sources,\n          options = _objectWithoutPropertiesLoose(_this$getMergedProps, _excluded);\n\n      options = normalizeOptions(options, {});\n\n      var _extractCloudinaryPro = extractCloudinaryProps(options),\n          cloudinaryProps = _extractCloudinaryPro.cloudinaryProps,\n          cloudinaryReactProps = _extractCloudinaryPro.cloudinaryReactProps,\n          nonCloudinaryProps = _extractCloudinaryPro.nonCloudinaryProps;\n\n      options = _extends({}, cloudinaryProps, cloudinaryReactProps); // const snakeCaseOptions = toSnakeCaseKeys(options);\n\n      var snakeCaseOptions = Util.withSnakeCaseKeys(options);\n      var cld = Cloudinary[\"new\"](snakeCaseOptions); // Use cloudinary-core to generate this video tag's attributes\n\n      var tagAttributes = cld.videoTag(publicId, options).attributes();\n      tagAttributes = _extends({}, Util.withCamelCaseKeys(tagAttributes), nonCloudinaryProps); // Aggregate child transformations, used for generating <source> tags for this video element\n\n      var childTransformations = getTransformation(_extends({}, options, {\n        children: children\n      }));\n      var sourceElements = null;\n\n      if (Util.isArray(sources) && !Util.isEmpty(sources)) {\n        sourceElements = _this.generateUsingSources(cld, publicId, childTransformations, sources);\n      } else if (Util.isArray(sourceTypes)) {\n        // We have multiple sourceTypes, so we generate <source> tags.\n        sourceElements = _this.generateUsingSourceTypes(cld, publicId, childTransformations, sourceTransformation, sourceTypes);\n      } else {\n        // We have a single source type so we generate the src attribute of this video element.\n        tagAttributes.src = _this.generateVideoUrl(cld, publicId, childTransformations, sourceTransformation[sourceTypes] || {}, sourceTypes);\n      }\n\n      return {\n        sources: sourceElements,\n        tagAttributes: tagAttributes\n      };\n    };\n\n    _this.reloadVideo = function () {\n      if (_this.element && _this.element.current) {\n        _this.element.current.load();\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = Video.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    // Load video on props change\n    this.reloadVideo();\n  }\n  /**\n   * Render a video element\n   */\n  ;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        fallback = _this$props.fallback,\n        children = _this$props.children;\n\n    var _this$getVideoTagProp = this.getVideoTagProps(),\n        tagAttributes = _this$getVideoTagProp.tagAttributes,\n        sources = _this$getVideoTagProp.sources;\n\n    return /*#__PURE__*/React.createElement(\"video\", _extends({\n      ref: this.attachRef\n    }, tagAttributes), sources, fallback, children);\n  };\n\n  return Video;\n}(CloudinaryComponent);\n\nVideo.propTypes = {\n  publicId: PropTypes.string,\n  sources: PropTypes.arrayOf(PropTypes.shape({\n    type: PropTypes.string,\n    codecs: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n    transformations: PropTypes.object\n  }))\n};\nVideo.defaultProps = {\n  sourceTypes: Cloudinary.DEFAULT_VIDEO_PARAMS.source_types\n};\n/**\n * A component representing a Cloudinary served audio\n * This component extends the Video component and replaces it's render function.\n * Audio files are uploaded to Cloudinary as a video asset type.\n * An <audio> tag with a video source, will play the audio only.\n */\n\nvar Audio = /*#__PURE__*/function (_Video) {\n  _inheritsLoose(Audio, _Video);\n\n  function Audio() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Video.call.apply(_Video, [this].concat(args)) || this;\n    _this.mimeType = 'audio';\n    _this.mimeSubTypes = AUDIO_MIME_TYPES;\n    return _this;\n  }\n\n  var _proto = Audio.prototype;\n  /**\n   * Render an audio element\n   */\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        innerRef = _this$props.innerRef,\n        fallback = _this$props.fallback,\n        children = _this$props.children;\n\n    var _this$getVideoTagProp = this.getVideoTagProps(),\n        tagAttributes = _this$getVideoTagProp.tagAttributes,\n        sources = _this$getVideoTagProp.sources; // We generated video attributes, lets delete the unneeded poster\n\n\n    delete tagAttributes.poster;\n    return /*#__PURE__*/React.createElement(\"audio\", _extends({\n      ref: innerRef\n    }, tagAttributes), sources, fallback, children);\n  };\n\n  return Audio;\n}(Video);\n\nAudio.propTypes = {\n  publicId: PropTypes.string\n};\nAudio.defaultProps = {\n  sourceTypes: ['aac', 'mp3', 'ogg']\n}; // eslint-disable-next-line no-unused-vars\n\n/**\n * Placeholder used by parent Image component, renders nothing on it's own.\n * @param type - type of placeholder 'blur'|'pixelate'|'predominant-color'|'vectorize',\n * @return {null}\n * @constructor\n */\n// eslint-disable-next-line no-unused-vars\n\nvar Placeholder = function Placeholder(_ref) {\n  return null;\n};\n\nPlaceholder.propTypes = {\n  type: PropTypes.string\n};\nPlaceholder.defaultProps = {\n  type: 'blur'\n};\nPlaceholder.displayName = 'CloudinaryPlaceholder';\nexport { Audio, CloudinaryContext, Image, Placeholder, Transformation, Video };","map":{"version":3,"sources":["C:/xampp/htdocs/Ecommerce-Project/front-end/node_modules/cloudinary-react/dist/cloudinary-react.esm.js"],"names":["React","createContext","createRef","PureComponent","Fragment","PropTypes","Transformation","Transformation$1","Util","Cloudinary","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_inheritsLoose","subClass","superClass","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_excluded$2","_excluded2","_excluded3","_excluded4","camelCase$1","camelCase","withCamelCaseKeys","isEmpty","CLOUDINARY_REACT_PROPS","VIDEO_MIME_TYPES","flv","mov","mpg","avi","wmv","ogv","AUDIO_MIME_TYPES","m4a","wav","m3u","mp3","aif","aifc","aiff","CLOUDINARY_PROPS","concat","PARAM_NAMES","map","reduce","accumulator","cloudinaryPropName","nonEmpty","obj","entries","a","_ref","_extends2","k","v","getConfiguredCloudinary","extendedProps","_nonEmpty","ops","options","withSnakeCaseKeys","getTag","props","tagType","publicId","cld","getImageTag","makeElementResponsive","img","snakeCaseOptions","cloudinary_update","responsive","extractCloudinaryProps","_ref2","children","result","cloudinaryProps","nonCloudinaryProps","cloudinaryReactProps","forEach","camelKey","value","undefined","isCloudinaryComponent","component","displayName","isValidElement","type","normalizeOptions","slice","left","right","getChildPlaceholder","Children","toArray","find","child","getChildTransformations","filter","context","childOptions","transformation","only","tr","typesFrom","configParams","types","any","getTransformation","accessibility","placeholder","rest","ownTransformation","methods","childrenOptions","advancedTransformations","CloudinaryContextType","CloudinaryComponent","_PureComponent","_props","_context","_this","getContext","onIntersect","setState","isInView","getExtendedProps","attachRef","element","innerRef","current","Function","_proto","render","defaultProps","propTypes","string","contextType","CloudinaryContext","_CloudinaryComponent","_extractCloudinaryPro","createElement","Provider","includeOwnBody","bool","_excluded$1","RESPONSIVE_OVERRIDE_WARNING","trim","Image","isResponsive","_this$getExtendedProp","width","console","warn","getOptions","_extendedProps$getTra","shouldLazyLoad","loading","getAttributes","additionalOptions","_additionalOptions","imageTag","cloudinaryAttributes","attributes","dataSrc","id","src","attr","update","detectIntersection","getPlaceholderType","removePlaceholderListener","placeholderElement","listenerRemovers","push","removeImgListener","_this$getExtendedProp2","state","handleImageLoaded","onLoad","isLoaded","renderPlaceholder","style","opacity","position","placeholderWrapperStyle","display","placeholderAttributes","renderImage","ref","_this$getExtendedProp3","componentDidMount","componentDidUpdate","componentWillUnmount","removeListener","exposesProps","_excluded","Video","_len","args","Array","_key","mimeType","mimeSubTypes","getMergedProps","generateVideoUrl","childTransformations","sourceTransformations","sourceType","urlOptions","defaults","resource_type","format","url","generateUsingSourceTypes","sourceTypes","toSourceTag","buildMimeType","generateUsingSources","sources","_ref$transformations","transformations","codecs","isArray","join","getVideoTagProps","_this$getMergedProps","_this$getMergedProps$","sourceTransformation","tagAttributes","videoTag","sourceElements","reloadVideo","load","_this$props","fallback","_this$getVideoTagProp","arrayOf","shape","oneOfType","object","DEFAULT_VIDEO_PARAMS","source_types","Audio","_Video","poster","Placeholder"],"mappings":"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","sourcesContent":["import React, { createContext, createRef, PureComponent, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Transformation as Transformation$1, Util, Cloudinary } from 'cloudinary-core';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded$2 = [\"public_id\"],\n    _excluded2 = [\"publicId\"],\n    _excluded3 = [\"children\"],\n    _excluded4 = [\"children\", \"accessibility\", \"placeholder\"];\nvar camelCase$1 = Util.camelCase,\n    withCamelCaseKeys = Util.withCamelCaseKeys,\n    isEmpty = Util.isEmpty; // props passed to cloudinary-core but should not be rendered as dom attributes\n\nvar CLOUDINARY_REACT_PROPS = ['accessibility', 'breakpoints', 'dataSrc', 'placeholder', 'publicId', 'signature', 'authToken'];\n/**\n * Convert common video file extensions to mime types\n * Most other common video file extensions have an identical mime type so do not need conversion.\n */\n\nvar VIDEO_MIME_TYPES = {\n  flv: 'x-flv',\n  '3gp': '3gpp',\n  mov: 'quicktime',\n  mpg: 'mpeg',\n  avi: 'x-msvideo',\n  wmv: 'x-ms-wmv',\n  ogv: 'ogg'\n};\n/**\n * Convert common audio file extensions to mime types\n * Most other common audio file extensions have an identical mime type so do not need conversion.\n */\n\nvar AUDIO_MIME_TYPES = {\n  m4a: 'mp4',\n  wav: 'vnd.wav',\n  m3u: 'x-mpegurl',\n  mp3: 'mpeg',\n  ogv: 'ogg',\n  aif: 'x-aiff',\n  aifc: 'x-aiff',\n  aiff: 'x-aiff'\n}; // props passed to cloudinary-core for dom elements attributes generation\n// Map Cloudinary props from array to object for efficient lookup\n\nvar CLOUDINARY_PROPS = [].concat(Transformation$1.PARAM_NAMES, CLOUDINARY_REACT_PROPS).map(Util.camelCase).reduce(function (accumulator, cloudinaryPropName) {\n  accumulator[cloudinaryPropName] = true;\n  return accumulator;\n}, {});\n/**\n * Return object without null/undefined entries\n * @param {*} obj\n */\n\nvar nonEmpty = function nonEmpty(obj) {\n  return Object.entries(obj).reduce(function (a, _ref) {\n    var _extends2;\n\n    var k = _ref[0],\n        v = _ref[1];\n    return v == null ? a : _extends({}, a, (_extends2 = {}, _extends2[k] = v, _extends2));\n  }, {});\n};\n/**\n * Generated a configured Cloudinary object.\n * @param extendedProps React props combined with custom Cloudinary configuration options\n * @return {Cloudinary} configured using extendedProps\n */\n\n\nvar getConfiguredCloudinary = function getConfiguredCloudinary(extendedProps) {\n  // eslint-disable-next-line camelcase\n  var _nonEmpty = nonEmpty(extendedProps),\n      ops = _objectWithoutPropertiesLoose(_nonEmpty, _excluded$2); // Remove null/undefined props\n\n\n  var options = Util.withSnakeCaseKeys(ops);\n  return Cloudinary[\"new\"](options);\n};\n\nvar getTag = function getTag(props, tagType) {\n  var publicId = props.publicId,\n      ops = _objectWithoutPropertiesLoose(props, _excluded2); // Remove null/undefined props\n\n\n  var cld = getConfiguredCloudinary(ops);\n  return cld[tagType + \"Tag\"](publicId, Util.withSnakeCaseKeys(ops));\n};\n/**\n * Get a new <img> tag initialized with given props\n * @param {*} props\n */\n\n\nvar getImageTag = function getImageTag(props) {\n  return getTag(props, 'image');\n};\n/**\n * Cloudinary underlying JS library will handle responsive behavior\n * @param {HTMLImageElement} img\n * @param {object} options\n * @Return callback that when called, will remove the listener created by Cloudinary.responsive\n */\n\n\nvar makeElementResponsive = function makeElementResponsive(img, options) {\n  var snakeCaseOptions = Util.withSnakeCaseKeys(options);\n  var cld = getConfiguredCloudinary(snakeCaseOptions); // Initialize cloudinary with new props\n\n  cld.cloudinary_update(img, snakeCaseOptions);\n  return cld.responsive(snakeCaseOptions, false);\n};\n/**\n * Extracts cloudinaryProps and nonCloudinaryProps from given props\n *\n * @param props\n * @returns {{children: *, cloudinaryReactProps: {}, cloudinaryProps: {}, nonCloudinaryProps: {}}}\n */\n\n\nvar extractCloudinaryProps = function extractCloudinaryProps(_ref2) {\n  var children = _ref2.children,\n      props = _objectWithoutPropertiesLoose(_ref2, _excluded3);\n\n  var result = {\n    children: children,\n    cloudinaryProps: {},\n    nonCloudinaryProps: {},\n    cloudinaryReactProps: {}\n  };\n  Object.keys(props).forEach(function (key) {\n    var camelKey = Util.camelCase(key);\n    var value = props[key]; // if valid and defined add to cloudinaryProps\n\n    if (CLOUDINARY_PROPS[camelKey]) {\n      if (props[key] !== undefined && props[key] !== null) {\n        result.cloudinaryProps[camelKey] = value;\n      }\n    } else if (camelKey === 'includeOwnBody') {\n      // cloudinary-react specific prop\n      result.cloudinaryReactProps[camelKey] = value;\n    } else {\n      // not valid so add to nonCloudinaryProps\n      result.nonCloudinaryProps[key] = value;\n    }\n  });\n  return result;\n};\n/**\n * Check if given component is a Cloudinary Component with given displayName\n * @param component the component to check\n * @param displayName of wanted component\n * @return {boolean}\n */\n\n\nvar isCloudinaryComponent = function isCloudinaryComponent(component, displayName) {\n  return !!( /*#__PURE__*/React.isValidElement(component) && component.type && component.type.displayName === displayName);\n};\n/**\n * Combine properties of all options to create an option Object that can be passed to Cloudinary methods.<br>\n *   `undefined` and `null` values are filtered out.\n * @protected\n * @returns {Object}\n * @param options one or more options objects\n */\n\n\nvar normalizeOptions = function normalizeOptions() {\n  return [].slice.call(arguments).reduce(function (left, right) {\n    Object.keys(right || {}).forEach(function (key) {\n      var value = right[key];\n\n      if (value !== null && value !== undefined) {\n        left[key] = value;\n      }\n    });\n    return left;\n  }, {});\n};\n\nvar getChildPlaceholder = function getChildPlaceholder(children) {\n  var result = null;\n\n  if (children) {\n    result = React.Children.toArray(children).find(function (child) {\n      return isCloudinaryComponent(child, 'CloudinaryPlaceholder');\n    });\n  }\n\n  return result;\n};\n\nvar getChildTransformations = function getChildTransformations(children) {\n  var result = children ? React.Children.toArray(children).filter(function (child) {\n    return isCloudinaryComponent(child, 'CloudinaryTransformation');\n  }).map(function (child) {\n    var options = normalizeOptions(child.props, child.context);\n    var childOptions = getChildTransformations(child.props.children);\n\n    if (childOptions) {\n      options.transformation = childOptions;\n    }\n\n    return options;\n  }) : [];\n  return result.length ? result : null;\n};\n/**\n * Return a new object containing keys and values where keys are in the keys list\n * @param {object} source Object to copy values from\n * @param {string[]} [keys=[]] a list of keys\n * @returns {object} an object with copied values\n */\n\n\nvar only = function only(source, keys) {\n  if (keys === void 0) {\n    keys = [];\n  }\n\n  if (!source) {\n    return source;\n  }\n\n  return keys.reduce(function (tr, key) {\n    if (key in source) {\n      tr[key] = source[key];\n    }\n\n    return tr;\n  }, {});\n};\n/**\n   * Create a React type definition object. All items are PropTypes.string or [string] or object or [object].\n   * @param {Array} configParams a list of parameter names\n   * @returns {Object}\n   * @private\n   */\n\n\nvar typesFrom = function typesFrom(configParams) {\n  configParams = configParams || [];\n  var types = {};\n\n  for (var i = 0; i < configParams.length; i++) {\n    var key = configParams[i];\n    types[camelCase$1(key)] = PropTypes.any;\n  }\n\n  return types;\n};\n/**\n * Returns an object with all the transformation parameters based on the context and properties of this element\n * and any children.\n * @param extendedProps\n * @returns {object} a hash of transformation and configuration parameters\n * @protected\n */\n\n\nvar getTransformation = function getTransformation(extendedProps) {\n  var children = extendedProps.children,\n      accessibility = extendedProps.accessibility,\n      placeholder = extendedProps.placeholder,\n      rest = _objectWithoutPropertiesLoose(extendedProps, _excluded4);\n\n  var ownTransformation = only(withCamelCaseKeys(rest), Transformation$1.methods) || {};\n  var childrenOptions = getChildTransformations(children);\n\n  if (!isEmpty(childrenOptions)) {\n    ownTransformation.transformation = childrenOptions;\n  } // Append placeholder and accessibility if exists\n\n\n  var advancedTransformations = {\n    accessibility: accessibility,\n    placeholder: placeholder\n  };\n  Object.keys(advancedTransformations).filter(function (k) {\n    return advancedTransformations[k];\n  }).forEach(function (k) {\n    ownTransformation[k] = advancedTransformations[k];\n  });\n  return ownTransformation;\n};\n\nvar CloudinaryContextType = /*#__PURE__*/createContext();\n\nvar camelCase = Util.camelCase;\n/**\n * A base component for Cloudinary components.\n * @protected\n */\n\nvar CloudinaryComponent = /*#__PURE__*/function (_PureComponent) {\n  _inheritsLoose(CloudinaryComponent, _PureComponent);\n\n  function CloudinaryComponent(_props, _context) {\n    var _this;\n\n    _this = _PureComponent.call(this, _props, _context) || this;\n\n    _this.getContext = function () {\n      return _this.context || {};\n    };\n\n    _this.onIntersect = function () {\n      // eslint-disable-next-line react/no-unused-state\n      _this.setState({\n        isInView: true\n      });\n    };\n\n    _this.getExtendedProps = function (props, context) {\n      if (props === void 0) {\n        props = _this.props;\n      }\n\n      if (context === void 0) {\n        context = _this.getContext();\n      }\n\n      return normalizeOptions(context, props);\n    };\n\n    _this.attachRef = function (element) {\n      var innerRef = _this.props.innerRef;\n      _this.element.current = element;\n\n      if (innerRef) {\n        if (innerRef instanceof Function) {\n          innerRef(element);\n        } else {\n          innerRef.current = element;\n        }\n      }\n    };\n\n    _this.element = /*#__PURE__*/createRef();\n    return _this;\n  }\n\n  var _proto = CloudinaryComponent.prototype;\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return CloudinaryComponent;\n}(PureComponent);\n\nCloudinaryComponent.defaultProps = {\n  innerRef: null,\n  publicId: null\n};\nCloudinaryComponent.propTypes = _extends({}, typesFrom(Transformation$1.PARAM_NAMES.map(camelCase)), {\n  innerRef: PropTypes.any,\n  publicId: PropTypes.string\n});\nCloudinaryComponent.contextType = CloudinaryContextType;\n\n/**\n * Provides a container for Cloudinary components. Any option set in CloudinaryContext will be passed to the children.\n *\n * @example\n *<CloudinaryContext cloudName=\"mycloud\" dpr=\"auto\">\n *    <!-- other tags -->\n *    <Image publicId={id}/>\n *</CloudinaryContext>\n *\n */\n\nvar CloudinaryContext = /*#__PURE__*/function (_CloudinaryComponent) {\n  _inheritsLoose(CloudinaryContext, _CloudinaryComponent);\n\n  function CloudinaryContext() {\n    return _CloudinaryComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = CloudinaryContext.prototype;\n\n  _proto.render = function render() {\n    var props = _extends({}, this.getContext(), this.props);\n\n    var _extractCloudinaryPro = extractCloudinaryProps(props),\n        children = _extractCloudinaryPro.children,\n        cloudinaryProps = _extractCloudinaryPro.cloudinaryProps,\n        nonCloudinaryProps = _extractCloudinaryPro.nonCloudinaryProps,\n        cloudinaryReactProps = _extractCloudinaryPro.cloudinaryReactProps;\n\n    return /*#__PURE__*/React.createElement(CloudinaryContextType.Provider, {\n      value: cloudinaryProps\n    }, cloudinaryReactProps.includeOwnBody ? children : /*#__PURE__*/React.createElement(\"div\", nonCloudinaryProps, children));\n  };\n\n  return CloudinaryContext;\n}(CloudinaryComponent);\n\nCloudinaryContext.propTypes = _extends({}, CloudinaryComponent.propTypes, {\n  includeOwnBody: PropTypes.bool\n});\nCloudinaryContext.defaultProps = {\n  includeOwnBody: false\n};\n\nvar _excluded$1 = [\"children\", \"innerRef\"];\nvar RESPONSIVE_OVERRIDE_WARNING = \"\\nWarning: passing a number value for width cancels the 'responsive' prop's effect on the image transformation.\\nThe 'responsive' prop affects the image transformation only when width === 'auto'.\\nPassing 'width=\\\"auto\\\" responsive' will affect the actual image width that is fetched from Cloudinary.\\nThe 'responsive' prop causes the Image component to request an image which width is equal to the width of it's container.\\nWhen passing 'width=\\\"auto\\\" responsive', you can set the <img> element width by passing a 'style' prop\".trim();\n/**\n * A component representing a Cloudinary served image\n */\n\nvar Image = /*#__PURE__*/function (_CloudinaryComponent) {\n  _inheritsLoose(Image, _CloudinaryComponent);\n\n  function Image(props, context) {\n    var _this;\n\n    _this = _CloudinaryComponent.call(this, props, context) || this;\n\n    _this.isResponsive = function () {\n      var _this$getExtendedProp = _this.getExtendedProps(),\n          responsive = _this$getExtendedProp.responsive,\n          width = _this$getExtendedProp.width;\n\n      if (responsive && width !== 'auto') {\n        console.warn(RESPONSIVE_OVERRIDE_WARNING);\n      }\n\n      return responsive && _this.element && _this.element.current;\n    };\n\n    _this.getOptions = function () {\n      var extendedProps = _this.getExtendedProps();\n\n      var _extendedProps$getTra = _extends({}, extendedProps, getTransformation(extendedProps)),\n          options = _objectWithoutPropertiesLoose(_extendedProps$getTra, _excluded$1);\n\n      if (!_this.shouldLazyLoad()) {\n        delete options.loading;\n      }\n\n      return options;\n    };\n\n    _this.getAttributes = function (additionalOptions) {\n      if (additionalOptions === void 0) {\n        additionalOptions = {};\n      }\n\n      var _additionalOptions = additionalOptions,\n          placeholder = _additionalOptions.placeholder;\n      var options = extractCloudinaryProps(_extends({}, _this.getOptions(), additionalOptions));\n      var cloudinaryProps = options.cloudinaryProps,\n          nonCloudinaryProps = options.nonCloudinaryProps,\n          cloudinaryReactProps = options.cloudinaryReactProps;\n      var imageTag = getImageTag(_extends({}, cloudinaryProps, cloudinaryReactProps));\n      var cloudinaryAttributes = Util.withCamelCaseKeys(imageTag.attributes()); // React requires camelCase instead of snake_case attributes\n\n      var attributes = _extends({}, cloudinaryAttributes, nonCloudinaryProps); // We want to keep 'data-src' if it exists\n\n\n      if (attributes.dataSrc) {\n        attributes['data-src'] = attributes.dataSrc;\n      } // Set placeholder Id\n\n\n      if (placeholder && attributes.id) {\n        attributes.id += '-cld-placeholder';\n      } // Set data-src if lazy loading and not in view\n\n\n      if (_this.shouldLazyLoad()) {\n        attributes['data-src'] = attributes.dataSrc || attributes.src;\n        delete attributes.src;\n      } // Remove unneeded attributes,\n\n\n      CLOUDINARY_REACT_PROPS.forEach(function (attr) {\n        delete attributes[attr];\n      });\n      return attributes;\n    };\n\n    _this.update = function () {\n      // Handle lazy loading\n      if (_this.shouldLazyLoad()) {\n        // Will set this.state.isInView = true when in view\n        Util.detectIntersection(_this.element.current, _this.onIntersect);\n      } else if (_this.isResponsive()) {\n        var options = _this.getOptions();\n\n        var placeholder = _this.getPlaceholderType(); // Make placeholder responsive\n\n\n        if (placeholder) {\n          var removePlaceholderListener = makeElementResponsive(_this.placeholderElement.current, _extends({}, options, {\n            placeholder: placeholder\n          }));\n\n          _this.listenerRemovers.push(removePlaceholderListener);\n        } // Make original image responsive\n\n\n        var removeImgListener = makeElementResponsive(_this.element.current, options);\n\n        _this.listenerRemovers.push(removeImgListener);\n      }\n    };\n\n    _this.shouldLazyLoad = function () {\n      var _this$getExtendedProp2 = _this.getExtendedProps(),\n          loading = _this$getExtendedProp2.loading;\n\n      var isInView = _this.state.isInView;\n      return !isInView && (loading === 'lazy' || loading === 'auto');\n    };\n\n    _this.handleImageLoaded = function () {\n      var onLoad = _this.props.onLoad;\n\n      _this.setState({\n        isLoaded: true\n      }, function () {\n        if (onLoad) {\n          onLoad();\n        }\n      });\n    };\n\n    _this.renderPlaceholder = function (placeholder, attributes) {\n      attributes.style = _extends({}, attributes.style || {}, {\n        opacity: 0,\n        position: 'absolute'\n      });\n      attributes.onLoad = _this.handleImageLoaded;\n      var placeholderWrapperStyle = {\n        display: 'inline'\n      };\n\n      var placeholderAttributes = _this.getAttributes({\n        placeholder: placeholder\n      });\n\n      return /*#__PURE__*/React.createElement(Fragment, null, _this.renderImage(attributes), /*#__PURE__*/React.createElement(\"div\", {\n        style: placeholderWrapperStyle\n      }, /*#__PURE__*/React.createElement(\"img\", _extends({\n        ref: _this.placeholderElement\n      }, placeholderAttributes))));\n    };\n\n    _this.renderImage = function (attributes) {\n      return /*#__PURE__*/React.createElement(\"img\", _extends({\n        ref: _this.attachRef\n      }, attributes));\n    };\n\n    _this.getPlaceholderType = function () {\n      var _this$getExtendedProp3 = _this.getExtendedProps(),\n          children = _this$getExtendedProp3.children;\n\n      var placeholder = getChildPlaceholder(children);\n      return placeholder ? placeholder.props.type : null;\n    };\n\n    _this.placeholderElement = /*#__PURE__*/createRef();\n    _this.state = {\n      isLoaded: false\n    };\n    _this.listenerRemovers = [];\n    return _this;\n  }\n  /**\n   * @return true when this image element should be made responsive, false otherwise.\n   */\n\n\n  var _proto = Image.prototype;\n\n  /**\n   * Invoked immediately after a component is mounted (inserted into the tree)\n   */\n  _proto.componentDidMount = function componentDidMount() {\n    this.update();\n  }\n  /**\n   * Invoked immediately after updating occurs. This method is not called for the initial render.\n   */\n  ;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    this.update();\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.listenerRemovers.forEach(function (removeListener) {\n      return removeListener();\n    });\n  }\n  /**\n   * Updates this Image's isLoaded state,\n   * And fires props.onLoad if exists.\n   */\n  ;\n\n  _proto.render = function render() {\n    var isLoaded = this.state.isLoaded;\n    var attributes = this.getAttributes();\n    var placeholder = this.getPlaceholderType(); // If image wasn't loaded and there's a child placeholder then we render it.\n\n    if (!isLoaded && placeholder) {\n      return this.renderPlaceholder(placeholder, attributes);\n    }\n\n    return this.renderImage(attributes);\n  };\n\n  return Image;\n}(CloudinaryComponent);\n\nImage.defaultProps = {};\nImage.propTypes = CloudinaryComponent.propTypes;\nImage.propTypes.responsive = PropTypes.bool;\nImage.propTypes.loading = PropTypes.string;\nImage.propTypes.accessibility = PropTypes.string;\n\n/**\n * Define a transformation that is applied to the parent tag.\n */\n\nvar Transformation = /*#__PURE__*/function (_CloudinaryComponent) {\n  _inheritsLoose(Transformation, _CloudinaryComponent);\n\n  function Transformation() {\n    return _CloudinaryComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = Transformation.prototype;\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return Transformation;\n}(CloudinaryComponent);\n\nTransformation.propTypes = CloudinaryComponent.propTypes;\nTransformation.defaultProps = {};\nTransformation.exposesProps = true;\nTransformation.displayName = 'CloudinaryTransformation';\n\nvar _excluded = [\"innerRef\", \"publicId\", \"fallback\", \"children\", \"sourceTypes\", \"sourceTransformation\", \"sources\"];\n/**\n * A component representing a Cloudinary served video\n */\n\nvar Video = /*#__PURE__*/function (_CloudinaryComponent) {\n  _inheritsLoose(Video, _CloudinaryComponent);\n\n  function Video() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _CloudinaryComponent.call.apply(_CloudinaryComponent, [this].concat(args)) || this;\n    _this.mimeType = 'video';\n    _this.mimeSubTypes = VIDEO_MIME_TYPES;\n\n    _this.getMergedProps = function () {\n      return _extends({}, _this.getContext(), _this.props);\n    };\n\n    _this.generateVideoUrl = function (cld, publicId, childTransformations, sourceTransformations, sourceType) {\n      var urlOptions = Util.withSnakeCaseKeys(Util.defaults({}, sourceTransformations, childTransformations, {\n        resource_type: 'video',\n        format: sourceType\n      }));\n      return cld.url(publicId, urlOptions);\n    };\n\n    _this.generateUsingSourceTypes = function (cld, publicId, childTransformations, sourceTransformations, sourceTypes) {\n      return sourceTypes.map(function (sourceType) {\n        return _this.toSourceTag(cld, publicId, childTransformations, sourceTransformations[sourceType] || {}, sourceType, _this.buildMimeType(sourceType));\n      });\n    };\n\n    _this.generateUsingSources = function (cld, publicId, childTransformations, sources) {\n      return sources.map(function (_ref) {\n        var _ref$transformations = _ref.transformations,\n            transformations = _ref$transformations === void 0 ? {} : _ref$transformations,\n            type = _ref.type,\n            codecs = _ref.codecs;\n        return _this.toSourceTag(cld, publicId, childTransformations, transformations, type, _this.buildMimeType(type, codecs));\n      });\n    };\n\n    _this.toSourceTag = function (cld, publicId, childTransformations, transformations, sourceType, mimeType) {\n      var src = _this.generateVideoUrl(cld, publicId, childTransformations, transformations, sourceType);\n\n      return /*#__PURE__*/React.createElement(\"source\", {\n        key: src + mimeType,\n        src: src,\n        type: mimeType\n      });\n    };\n\n    _this.buildMimeType = function (type, codecs) {\n      var mimeType = _this.mimeType + \"/\" + (_this.mimeSubTypes[type] || type);\n\n      if (!Util.isEmpty(codecs)) {\n        mimeType += \"; codecs=\" + (Util.isArray(codecs) ? codecs.join(', ') : codecs);\n      }\n\n      return mimeType;\n    };\n\n    _this.getVideoTagProps = function () {\n      var _this$getMergedProps = _this.getMergedProps(),\n          publicId = _this$getMergedProps.publicId,\n          children = _this$getMergedProps.children,\n          sourceTypes = _this$getMergedProps.sourceTypes,\n          _this$getMergedProps$ = _this$getMergedProps.sourceTransformation,\n          sourceTransformation = _this$getMergedProps$ === void 0 ? {} : _this$getMergedProps$,\n          sources = _this$getMergedProps.sources,\n          options = _objectWithoutPropertiesLoose(_this$getMergedProps, _excluded);\n\n      options = normalizeOptions(options, {});\n\n      var _extractCloudinaryPro = extractCloudinaryProps(options),\n          cloudinaryProps = _extractCloudinaryPro.cloudinaryProps,\n          cloudinaryReactProps = _extractCloudinaryPro.cloudinaryReactProps,\n          nonCloudinaryProps = _extractCloudinaryPro.nonCloudinaryProps;\n\n      options = _extends({}, cloudinaryProps, cloudinaryReactProps); // const snakeCaseOptions = toSnakeCaseKeys(options);\n\n      var snakeCaseOptions = Util.withSnakeCaseKeys(options);\n      var cld = Cloudinary[\"new\"](snakeCaseOptions); // Use cloudinary-core to generate this video tag's attributes\n\n      var tagAttributes = cld.videoTag(publicId, options).attributes();\n      tagAttributes = _extends({}, Util.withCamelCaseKeys(tagAttributes), nonCloudinaryProps); // Aggregate child transformations, used for generating <source> tags for this video element\n\n      var childTransformations = getTransformation(_extends({}, options, {\n        children: children\n      }));\n      var sourceElements = null;\n\n      if (Util.isArray(sources) && !Util.isEmpty(sources)) {\n        sourceElements = _this.generateUsingSources(cld, publicId, childTransformations, sources);\n      } else if (Util.isArray(sourceTypes)) {\n        // We have multiple sourceTypes, so we generate <source> tags.\n        sourceElements = _this.generateUsingSourceTypes(cld, publicId, childTransformations, sourceTransformation, sourceTypes);\n      } else {\n        // We have a single source type so we generate the src attribute of this video element.\n        tagAttributes.src = _this.generateVideoUrl(cld, publicId, childTransformations, sourceTransformation[sourceTypes] || {}, sourceTypes);\n      }\n\n      return {\n        sources: sourceElements,\n        tagAttributes: tagAttributes\n      };\n    };\n\n    _this.reloadVideo = function () {\n      if (_this.element && _this.element.current) {\n        _this.element.current.load();\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = Video.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    // Load video on props change\n    this.reloadVideo();\n  }\n  /**\n   * Render a video element\n   */\n  ;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        fallback = _this$props.fallback,\n        children = _this$props.children;\n\n    var _this$getVideoTagProp = this.getVideoTagProps(),\n        tagAttributes = _this$getVideoTagProp.tagAttributes,\n        sources = _this$getVideoTagProp.sources;\n\n    return /*#__PURE__*/React.createElement(\"video\", _extends({\n      ref: this.attachRef\n    }, tagAttributes), sources, fallback, children);\n  };\n\n  return Video;\n}(CloudinaryComponent);\n\nVideo.propTypes = {\n  publicId: PropTypes.string,\n  sources: PropTypes.arrayOf(PropTypes.shape({\n    type: PropTypes.string,\n    codecs: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n    transformations: PropTypes.object\n  }))\n};\nVideo.defaultProps = {\n  sourceTypes: Cloudinary.DEFAULT_VIDEO_PARAMS.source_types\n};\n\n/**\n * A component representing a Cloudinary served audio\n * This component extends the Video component and replaces it's render function.\n * Audio files are uploaded to Cloudinary as a video asset type.\n * An <audio> tag with a video source, will play the audio only.\n */\n\nvar Audio = /*#__PURE__*/function (_Video) {\n  _inheritsLoose(Audio, _Video);\n\n  function Audio() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Video.call.apply(_Video, [this].concat(args)) || this;\n    _this.mimeType = 'audio';\n    _this.mimeSubTypes = AUDIO_MIME_TYPES;\n    return _this;\n  }\n\n  var _proto = Audio.prototype;\n\n  /**\n   * Render an audio element\n   */\n  _proto.render = function render() {\n    var _this$props = this.props,\n        innerRef = _this$props.innerRef,\n        fallback = _this$props.fallback,\n        children = _this$props.children;\n\n    var _this$getVideoTagProp = this.getVideoTagProps(),\n        tagAttributes = _this$getVideoTagProp.tagAttributes,\n        sources = _this$getVideoTagProp.sources; // We generated video attributes, lets delete the unneeded poster\n\n\n    delete tagAttributes.poster;\n    return /*#__PURE__*/React.createElement(\"audio\", _extends({\n      ref: innerRef\n    }, tagAttributes), sources, fallback, children);\n  };\n\n  return Audio;\n}(Video);\n\nAudio.propTypes = {\n  publicId: PropTypes.string\n};\nAudio.defaultProps = {\n  sourceTypes: ['aac', 'mp3', 'ogg']\n};\n\n// eslint-disable-next-line no-unused-vars\n/**\n * Placeholder used by parent Image component, renders nothing on it's own.\n * @param type - type of placeholder 'blur'|'pixelate'|'predominant-color'|'vectorize',\n * @return {null}\n * @constructor\n */\n// eslint-disable-next-line no-unused-vars\n\nvar Placeholder = function Placeholder(_ref) {\n  return null;\n};\n\nPlaceholder.propTypes = {\n  type: PropTypes.string\n};\nPlaceholder.defaultProps = {\n  type: 'blur'\n};\nPlaceholder.displayName = 'CloudinaryPlaceholder';\n\nexport { Audio, CloudinaryContext, Image, Placeholder, Transformation, Video };\n"]},"metadata":{},"sourceType":"module"}