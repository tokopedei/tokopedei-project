{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Ecommerce-Project\\\\front-end\\\\src\\\\components\\\\main\\\\nav\\\\categories\\\\Categories.jsx\",\n    _s = $RefreshSig$();\n\nimport './Categories.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { IoChevronUpOutline } from 'react-icons/io5';\nimport { IoChevronDownOutline } from 'react-icons/io5';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Categories = () => {\n  _s();\n\n  const [url, setUrl] = useState('');\n  const [arrowIcon, setArrowIcon] = useState('');\n  const [isHidden, setIsHidden] = useState(true);\n  const [btnColor, setBtnColor] = useState('darkblue');\n  const ul = useRef(null);\n  const arr = useSelector(state => state.getCategories);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const axios = require('axios');\n\n  useEffect(() => {\n    // Fetch all categories\n    (async () => {\n      try {\n        const res = await axios.get('http://localhost:3001/categories');\n        const found = res.data.data.find(e => e);\n        const category = found.name.replaceAll(' ', '-').toLowerCase();\n        setUrl(category);\n        dispatch({\n          type: 'SET_CATEGORIES',\n          categories: res.data.data\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    })();\n  }, [dispatch, axios]);\n  useEffect(() => {\n    // First URL handler  \n    window.history.replaceState(null, '', url);\n  }, [history, url]);\n  useEffect(() => {\n    window.onpopstate = () => {\n      dispatch({\n        type: 'SET_SEARCH_STATUS',\n        searchStatus: null\n      });\n      window.history.replaceState(null, '', url);\n    };\n  }, [dispatch, url]);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"categories-nav\",\n    ref: ul,\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"dropdown\",\n      onMouseLeave: () => {\n        setArrowIcon(false);\n        setIsHidden(true);\n        setBtnColor('darkblue');\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `drop-btn ${btnColor}`,\n        onMouseOver: () => {\n          setArrowIcon( /*#__PURE__*/_jsxDEV(IoChevronUpOutline, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 38\n          }, this));\n          setIsHidden(false);\n          setBtnColor('lightblue');\n        },\n        children: [\"Kategori \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: arrowIcon ? arrowIcon : /*#__PURE__*/_jsxDEV(IoChevronDownOutline, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 66\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-content\",\n        hidden: isHidden,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-box\",\n          children: arr.map(e => {\n            if (arr.find(e => e)) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  exact: \"true\",\n                  to: {\n                    pathname: `/${e.name.replaceAll(' ', '-').toLowerCase()}`,\n                    id: e.id\n                  },\n                  onClick: () => {\n                    setArrowIcon(false);\n                    setIsHidden(true);\n                  },\n                  children: e.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 37\n                }, this)\n              }, e.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this);\n            }\n\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: {\n                  pathname: `/{e.name.replaceAll(' ', '-').toLowerCase()}`,\n                  id: e.id\n                },\n                children: e.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this)\n            }, e.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Categories, \"SkTtUsIUCwJzZeOiZv5BpFpwsws=\", false, function () {\n  return [useSelector, useDispatch, useHistory];\n});\n\n_c = Categories;\nexport default Categories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"sources":["C:/xampp/htdocs/Ecommerce-Project/front-end/src/components/main/nav/categories/Categories.jsx"],"names":["React","useState","useEffect","useRef","Link","useHistory","useSelector","useDispatch","IoChevronUpOutline","IoChevronDownOutline","Categories","url","setUrl","arrowIcon","setArrowIcon","isHidden","setIsHidden","btnColor","setBtnColor","ul","arr","state","getCategories","dispatch","history","axios","require","res","get","found","data","find","e","category","name","replaceAll","toLowerCase","type","categories","err","console","error","window","replaceState","onpopstate","searchStatus","map","pathname","id"],"mappings":";;;AAAA,OAAO,kBAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAoD,OAApD;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,WAAT,EAAuBC,WAAvB,QAA0C,aAA1C;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,SAASC,oBAAT,QAAqC,iBAArC;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,UAAD,CAAxC;AACA,QAAMkB,EAAE,GAAGhB,MAAM,CAAC,IAAD,CAAjB;AACA,QAAMiB,GAAG,GAAGd,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACC,aAAhB,CAAvB;AACA,QAAMC,QAAQ,GAAGhB,WAAW,EAA5B;AACA,QAAMiB,OAAO,GAAGnB,UAAU,EAA1B;;AACA,QAAMoB,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEAxB,EAAAA,SAAS,CAAC,MAAM;AAAE;AACd,KAAC,YAAY;AACT,UAAI;AACA,cAAMyB,GAAG,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,kCAAV,CAAlB;AAEA,cAAMC,KAAK,GAAGF,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcC,IAAd,CAAmBC,CAAC,IAAIA,CAAxB,CAAd;AACA,cAAMC,QAAQ,GAAGJ,KAAK,CAACK,IAAN,CAAWC,UAAX,CAAsB,GAAtB,EAA2B,GAA3B,EAAgCC,WAAhC,EAAjB;AACAxB,QAAAA,MAAM,CAACqB,QAAD,CAAN;AACAV,QAAAA,QAAQ,CAAC;AAACc,UAAAA,IAAI,EAAE,gBAAP;AAAyBC,UAAAA,UAAU,EAAEX,GAAG,CAACG,IAAJ,CAASA;AAA9C,SAAD,CAAR;AACH,OAPD,CAOE,OAAOS,GAAP,EAAY;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH;AACJ,KAXD;AAYH,GAbQ,EAaN,CAAChB,QAAD,EAAWE,KAAX,CAbM,CAAT;AAeAvB,EAAAA,SAAS,CAAC,MAAO;AAAE;AACfwC,IAAAA,MAAM,CAAClB,OAAP,CAAemB,YAAf,CAA4B,IAA5B,EAAkC,EAAlC,EAAsChC,GAAtC;AACH,GAFQ,EAEP,CAACa,OAAD,EAAUb,GAAV,CAFO,CAAT;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACZwC,IAAAA,MAAM,CAACE,UAAP,GAAoB,MAAM;AACtBrB,MAAAA,QAAQ,CAAC;AAACc,QAAAA,IAAI,EAAE,mBAAP;AAA4BQ,QAAAA,YAAY,EAAE;AAA1C,OAAD,CAAR;AACAH,MAAAA,MAAM,CAAClB,OAAP,CAAemB,YAAf,CAA4B,IAA5B,EAAkC,EAAlC,EAAsChC,GAAtC;AACF,KAHF;AAIH,GALQ,EAKN,CAACY,QAAD,EAAWZ,GAAX,CALM,CAAT;AAOA,sBACI;AAAI,IAAA,SAAS,EAAC,gBAAd;AAA+B,IAAA,GAAG,EAAEQ,EAApC;AAAA,2BACI;AACI,MAAA,SAAS,EAAC,UADd;AAEI,MAAA,YAAY,EAAE,MAAM;AAChBL,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,QAAAA,WAAW,CAAC,UAAD,CAAX;AACH,OANL;AAAA,8BAQI;AACI,QAAA,SAAS,EAAG,YAAWD,QAAS,EADpC;AAGI,QAAA,WAAW,EAAE,MAAM;AACfH,UAAAA,YAAY,eAAC,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,kBAAD,CAAZ;AACAE,UAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,UAAAA,WAAW,CAAC,WAAD,CAAX;AACH,SAPL;AAAA,6CASiB;AAAA,oBAAOL,SAAS,GAAIA,SAAJ,gBAAgB,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA,gBATjB;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eAoBI;AACI,QAAA,SAAS,EAAC,kBADd;AAEI,QAAA,MAAM,EAAEE,QAFZ;AAAA,+BAII;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,oBACCK,GAAG,CAAC0B,GAAJ,CAAQd,CAAC,IAAI;AACV,gBAAIZ,GAAG,CAACW,IAAJ,CAASC,CAAC,IAAIA,CAAd,CAAJ,EAAsB;AAClB,kCACI;AAAA,uCACI,QAAC,IAAD;AACI,kBAAA,KAAK,EAAC,MADV;AAEI,kBAAA,EAAE,EAAE;AACAe,oBAAAA,QAAQ,EAAG,IAAGf,CAAC,CAACE,IAAF,CAAOC,UAAP,CAAkB,GAAlB,EAAuB,GAAvB,EAA4BC,WAA5B,EAA0C,EADxD;AAEAY,oBAAAA,EAAE,EAAEhB,CAAC,CAACgB;AAFN,mBAFR;AAMI,kBAAA,OAAO,EAAE,MAAM;AACXlC,oBAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,oBAAAA,WAAW,CAAC,IAAD,CAAX;AACH,mBATL;AAAA,4BAWKgB,CAAC,CAACE;AAXP;AAAA;AAAA;AAAA;AAAA;AADJ,iBAAUF,CAAC,CAACgB,EAAZ;AAAA;AAAA;AAAA;AAAA,sBADJ;AAiBH;;AAED,gCACI;AAAA,qCACI,QAAC,IAAD;AACI,gBAAA,EAAE,EAAE;AACAD,kBAAAA,QAAQ,EAAG,8CADX;AAEAC,kBAAAA,EAAE,EAAEhB,CAAC,CAACgB;AAFN,iBADR;AAAA,0BAMKhB,CAAC,CAACE;AANP;AAAA;AAAA;AAAA;AAAA;AADJ,eAAUF,CAAC,CAACgB,EAAZ;AAAA;AAAA;AAAA;AAAA,oBADJ;AAYH,WAjCA;AADD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cApBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkEH,CAvGD;;GAAMtC,U;UAMUJ,W,EACKC,W,EACDF,U;;;KARdK,U;AAyGN,eAAeA,UAAf","sourcesContent":["import './Categories.css';\r\nimport React, { useState, useEffect, useRef }  from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useSelector,  useDispatch } from 'react-redux';\r\nimport { IoChevronUpOutline } from 'react-icons/io5';\r\nimport { IoChevronDownOutline } from 'react-icons/io5';\r\n\r\nconst Categories = () => {\r\n    const [url, setUrl] = useState('');\r\n    const [arrowIcon, setArrowIcon] = useState('');\r\n    const [isHidden, setIsHidden] = useState(true);\r\n    const [btnColor, setBtnColor] = useState('darkblue');\r\n    const ul = useRef(null);\r\n    const arr = useSelector(state => state.getCategories);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const axios = require('axios');\r\n\r\n    useEffect(() => { // Fetch all categories\r\n        (async () => {\r\n            try {\r\n                const res = await axios.get('http://localhost:3001/categories');\r\n\r\n                const found = res.data.data.find(e => e);\r\n                const category = found.name.replaceAll(' ', '-').toLowerCase();\r\n                setUrl(category);\r\n                dispatch({type: 'SET_CATEGORIES', categories: res.data.data});\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n        })();\r\n    }, [dispatch, axios]);\r\n\r\n    useEffect(() =>  { // First URL handler  \r\n        window.history.replaceState(null, '', url);      \r\n    },[history, url]);\r\n\r\n    useEffect(() => {\r\n        window.onpopstate = () => {\r\n            dispatch({type: 'SET_SEARCH_STATUS', searchStatus: null });\r\n            window.history.replaceState(null, '', url);\r\n         }\r\n    }, [dispatch, url]);\r\n\r\n    return (\r\n        <ul className='categories-nav' ref={ul}> \r\n            <li \r\n                className='dropdown' \r\n                onMouseLeave={() => {\r\n                    setArrowIcon(false);\r\n                    setIsHidden(true);\r\n                    setBtnColor('darkblue');\r\n                }}\r\n            >\r\n                <button \r\n                    className={`drop-btn ${btnColor}`}\r\n                    \r\n                    onMouseOver={() => {\r\n                        setArrowIcon(<IoChevronUpOutline />);\r\n                        setIsHidden(false);\r\n                        setBtnColor('lightblue');\r\n                    }}\r\n                >\r\n                        Kategori <span>{arrowIcon ?  arrowIcon : <IoChevronDownOutline />}</span>\r\n                </button>\r\n\r\n                <div \r\n                    className='dropdown-content'\r\n                    hidden={isHidden}\r\n                >\r\n                    <div className='dropdown-box'>\r\n                    {arr.map(e => {\r\n                        if (arr.find(e => e)) { \r\n                            return (\r\n                                <div key={e.id}>\r\n                                    <Link \r\n                                        exact='true' \r\n                                        to={{\r\n                                            pathname: `/${e.name.replaceAll(' ', '-').toLowerCase()}`, \r\n                                            id: e.id\r\n                                        }}\r\n                                        onClick={() => {\r\n                                            setArrowIcon(false);\r\n                                            setIsHidden(true);\r\n                                        }}\r\n                                    >\r\n                                        {e.name}\r\n                                    </Link>\r\n                                </div>\r\n                            );\r\n                        }\r\n\r\n                        return (\r\n                            <div key={e.id}>\r\n                                <Link \r\n                                    to={{\r\n                                        pathname: `/{e.name.replaceAll(' ', '-').toLowerCase()}`,\r\n                                        id: e.id\r\n                                    }}\r\n                                >\r\n                                    {e.name}\r\n                                </Link>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default Categories;"]},"metadata":{},"sourceType":"module"}