{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Ecommerce-Project\\\\front-end\\\\src\\\\components\\\\main\\\\payment\\\\cart\\\\search\\\\Search.jsx\",\n    _s = $RefreshSig$();\n\nimport './Search.css';\nimport './SearchQuerties.css';\nimport React, { useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const cartSummery = useSelector(state => state.getCartSummery);\n  const searchInput = useRef(null);\n  const dispatch = useDispatch();\n\n  const searchHandler = productName => {\n    // Fetch product by searched name\n    const found = cartSummery.filter(e => e.name.toLowerCase().includes(productName.toLowerCase()));\n\n    if (found.length > 0 && productName) {\n      dispatch({\n        type: 'SET_CART_SUMMERY',\n        cartSummery: found\n      });\n    }\n\n    if (!productName) {\n      dispatch({\n        type: 'SET_REFETCH_CART_SUMMERY',\n        refetchCartSummery: Math.random() * 2\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => e.preventDefault(),\n    className: \"payment-search-form\",\n    autoComplete: \"off\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-box\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"search\",\n        name: \"search\",\n        maxLength: \"50\",\n        placeholder: \"Cari Produk\",\n        ref: searchInput,\n        onChange: e => {\n          e.preventDefault();\n          searchHandler(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Search, \"EsDqpWoQ8RNjsDviaLCrpK63EbM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/xampp/htdocs/Ecommerce-Project/front-end/src/components/main/payment/cart/search/Search.jsx"],"names":["React","useRef","useSelector","useDispatch","Search","cartSummery","state","getCartSummery","searchInput","dispatch","searchHandler","productName","found","filter","e","name","toLowerCase","includes","length","type","refetchCartSummery","Math","random","preventDefault","target","value"],"mappings":";;;AAAA,OAAO,cAAP;AACA,OAAO,sBAAP;AACA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAMC,WAAW,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,cAAhB,CAA/B;AACA,QAAMC,WAAW,GAAGP,MAAM,CAAC,IAAD,CAA1B;AACA,QAAMQ,QAAQ,GAAGN,WAAW,EAA5B;;AAEA,QAAMO,aAAa,GAAIC,WAAD,IAAiB;AAAE;AACrC,UAAMC,KAAK,GAAGP,WAAW,CAACQ,MAAZ,CAAmBC,CAAC,IAAIA,CAAC,CAACC,IAAF,CAAOC,WAAP,GAAqBC,QAArB,CAA8BN,WAAW,CAACK,WAAZ,EAA9B,CAAxB,CAAd;;AAEA,QAAIJ,KAAK,CAACM,MAAN,GAAe,CAAf,IAAoBP,WAAxB,EAAqC;AACjCF,MAAAA,QAAQ,CAAC;AAACU,QAAAA,IAAI,EAAE,kBAAP;AAA2Bd,QAAAA,WAAW,EAAEO;AAAxC,OAAD,CAAR;AACH;;AAED,QAAI,CAACD,WAAL,EAAkB;AACdF,MAAAA,QAAQ,CAAC;AAACU,QAAAA,IAAI,EAAE,0BAAP;AAAmCC,QAAAA,kBAAkB,EAAEC,IAAI,CAACC,MAAL,KAAgB;AAAvE,OAAD,CAAR;AACH;AACJ,GAVD;;AAYA,sBACI;AAAM,IAAA,QAAQ,EAAGR,CAAD,IAAOA,CAAC,CAACS,cAAF,EAAvB;AAA0C,IAAA,SAAS,EAAC,qBAApD;AAA0E,IAAA,YAAY,EAAC,KAAvF;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,IAAI,EAAC,QAFT;AAGI,QAAA,SAAS,EAAC,IAHd;AAII,QAAA,WAAW,EAAC,aAJhB;AAKI,QAAA,GAAG,EAAEf,WALT;AAMI,QAAA,QAAQ,EAAGM,CAAD,IAAO;AACbA,UAAAA,CAAC,CAACS,cAAF;AACAb,UAAAA,aAAa,CAACI,CAAC,CAACU,MAAF,CAASC,KAAV,CAAb;AACH;AATL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAlCD;;GAAMrB,M;UACkBF,W,EAEHC,W;;;KAHfC,M;AAoCN,eAAeA,MAAf","sourcesContent":["import './Search.css';\r\nimport './SearchQuerties.css';\r\nimport React, { useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst Search = () => {\r\n    const cartSummery = useSelector(state => state.getCartSummery);\r\n    const searchInput = useRef(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const searchHandler = (productName) => { // Fetch product by searched name\r\n        const found = cartSummery.filter(e => e.name.toLowerCase().includes(productName.toLowerCase()))\r\n\r\n        if (found.length > 0 && productName) {\r\n            dispatch({type: 'SET_CART_SUMMERY', cartSummery: found});\r\n        }\r\n\r\n        if (!productName) {\r\n            dispatch({type: 'SET_REFETCH_CART_SUMMERY', refetchCartSummery: Math.random() * 2});\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={(e) => e.preventDefault()}className='payment-search-form' autoComplete='off'>\r\n            <div className='search-box'>\r\n                <input \r\n                    type='search' \r\n                    name='search' \r\n                    maxLength='50'\r\n                    placeholder='Cari Produk'\r\n                    ref={searchInput}\r\n                    onChange={(e) => {\r\n                        e.preventDefault();\r\n                        searchHandler(e.target.value);\r\n                    }}\r\n                />\r\n            </div>\r\n        </form> \r\n    );\r\n}\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}